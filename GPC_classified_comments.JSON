[
    {
      "id": 706735967,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/6",
      "created_at": "2020-10-11T17:08:19Z",
      "updated_at": "2020-10-11T17:08:19Z",
      "body": "I don't have strong feelings about this, but structured headers are mostly useful if you want to encode complex values (i.e. something beyond 1 / 0).  Unless we expect to need something more complex in the future (which I'm nervous about, re the extension conversation) I don't see the value of adoption this yet-to-be-standardized approach.  \r\n\r\nThat said, sincerely, i dont have strong feelings about this, so if others are into it, im not going to argue :)",
      "user": "pes10k",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "philosophical",
      "reason": "The comment expresses a nuanced and somewhat ambivalent view on the proposed structured headers approach, indicating a philosophical discussion rather than a technical or practical one. It raises questions about its potential value and whether it's suitable for adoption in an evolving standard, which is characteristic of philosophical discussions."
    },
    {
      "id": 709435157,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/9",
      "created_at": "2020-10-15T16:16:57Z",
      "updated_at": "2020-10-15T16:16:57Z",
      "body": "Fully in support of this change, thanks @dmarti. Needing to serve an extensionless file from a static site without server access (Github pages for example) overcomplicates things unnecessarily.",
      "user": "dharb",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "administrative",
      "reason": "The comment is primarily providing a request or suggestion rather than offering technical advice, discussing a use case, requesting a feature, posing a philosophical question, or resolving an issue. It also includes an expression of gratitude to the author and mentions a specific context (Github pages), but these elements are secondary to the main request for clarification on serving files without server access."
    },
    {
      "id": 709440216,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/9",
      "created_at": "2020-10-15T16:25:24Z",
      "updated_at": "2020-10-15T16:25:24Z",
      "body": "I'll update our sites (reference server and landing page) and documentation to reflect the change.",
      "user": "dharb",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment provides specific information about updating two sites and documentation, which is technical in nature. It does not suggest a need for new functionality or provide an explanation that would typically be provided by \"Use Case\", \"Feature Request\", or \"Administrative\". Additionally, there is no apparent conclusion or resolution to report, making it more suitable as a technical update rather than any other category."
    },
    {
      "id": 709528570,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/6",
      "created_at": "2020-10-15T18:58:17Z",
      "updated_at": "2020-10-15T18:58:17Z",
      "body": "Per @hober [in the Privacy CG call](https://github.com/privacycg/meetings/blob/master/2020/telcons/10-08-minutes.md) \r\n\r\n> Surprised the Sec-GPC header doesn't use Structured Headers. Issue already filed\r\n> When a structured header represents a boolean and the header is absent, the boolean is true, which maybe is not what you're looking for\r\n\r\nThe easiest way to avoid this behavior would be to not use structured headers. Per our discussion with some of you today, I am closing this issue. Feel free to reopen.",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment provides constructive feedback and suggestions on how to improve the handling of boolean values in header structures, specifically recommending against using structured headers for such cases."
    },
    {
      "id": 709548193,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/6",
      "created_at": "2020-10-15T19:38:40Z",
      "updated_at": "2020-10-15T19:38:40Z",
      "body": "This was further discussed and it wasn't clear that @hober's assessment was correct. She seems to have been thinking of boolean fields in deeper structures, and not at the top level. It's still worth checking, this came back twice from two browser vendors \u2014 it's worth investigating.",
      "user": "darobin",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "administrative",
      "reason": "The comment is providing information about a non-technical matter (a discussion about a technical issue) that requires an administrative response or resolution. It does not require a technical analysis or expertise to understand, but rather a quick and straightforward answer."
    },
    {
      "id": 710602822,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/11",
      "created_at": "2020-10-16T20:46:46Z",
      "updated_at": "2020-10-16T20:46:46Z",
      "body": "Thanks @scottlow, I like the simplification. The only concern I have is I think some implementers may have linked the injection of the signal to tracking protection being turned on, so when a user \"safelists\" (manually disables protection for) a domain, the signal isn't injected there. For instance, https://github.com/EFForg/privacybadger/pull/2693.\r\n\r\n@darobin what do you think? Do we need to explicitly call out that the DOM signal directly reflects the header signal here?",
      "user": "dharb",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides a technical insight into how the implementation works and suggests an improvement. It explains why some implementers may have missed injecting the signal in certain scenarios, such as disabling protection for a domain using \"safelists\". The suggestion to explicitly mention this in documentation is also provided."
    },
    {
      "id": 716029191,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/5",
      "created_at": "2020-10-24T17:38:55Z",
      "updated_at": "2020-10-24T17:38:55Z",
      "body": "The TPWG TPE should at least be mentioned in the References: https://www.w3.org/TR/tracking-dnt/",
      "user": "michael-oneill",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides specific feedback on technical aspects of the W3C specification, namely that a certain term (TPWG) is incorrectly used."
    },
    {
      "id": 716047772,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/5",
      "created_at": "2020-10-24T20:02:12Z",
      "updated_at": "2020-10-24T20:02:12Z",
      "body": "Created new issue for that",
      "user": "michael-oneill",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment provides information about creating a new issue, which suggests it is intended to be reviewed and potentially addressed through technical means."
    },
    {
      "id": 717614551,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/8",
      "created_at": "2020-10-28T00:09:43Z",
      "updated_at": "2020-10-28T00:09:43Z",
      "body": "@pes10k @dharb merging is blocked.  do you want to resubmit?",
      "user": "asoltani",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment provides feedback on an issue (merging) and suggests how it should be handled, which falls under the category of technical advice or troubleshooting."
    },
    {
      "id": 717614800,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/8",
      "created_at": "2020-10-28T00:10:28Z",
      "updated_at": "2020-10-28T00:10:28Z",
      "body": "Sure, i can rebase\r\n",
      "user": "pes10k",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment provides technical information about the code or system being reviewed, specifically that it allows for rebasing. This is typically considered a form of technical feedback, as it offers suggestions or corrections related to the implementation or behavior of the code."
    },
    {
      "id": 717620861,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/8",
      "created_at": "2020-10-28T00:29:41Z",
      "updated_at": "2020-10-28T00:29:41Z",
      "body": "Merging just requires someone with write access to leave an approving review first. If this proves to be a pain point let me know and we can consider alternatives.",
      "user": "dharb",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "This comment is requesting a feature, which typically involves proposing a change or enhancement for the system. The tone of the comment suggests that there may be limitations or drawbacks associated with implementing this feature, but it does not explicitly mention any technical issues or problems."
    },
    {
      "id": 717621649,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/8",
      "created_at": "2020-10-28T00:32:22Z",
      "updated_at": "2020-10-28T00:32:22Z",
      "body": "i can give @pes10k admin privs -- or just ping me when you've rebased and I will merge",
      "user": "asoltani",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "The comment is requesting administrative privileges to manage someone else's (pes10k's) account, which implies a need for the requester to have control over the user's profile and permissions. This request suggests an improvement or addition to the current functionality of the platform rather than offering any new features itself."
    },
    {
      "id": 717670938,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/5",
      "created_at": "2020-10-28T03:23:17Z",
      "updated_at": "2020-10-28T03:23:17Z",
      "body": "Resolvedby https://github.com/globalprivacycontrol/gpc-spec/pull/16",
      "user": "asoltani",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "This comment is stating that a specific issue has been resolved, as indicated by the 'Resolvedby' tag. It does not provide any additional context about the issue itself, its type (Technical Feedback, Use Case, etc.), or what changes were made to resolve it."
    },
    {
      "id": 717671255,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/14",
      "created_at": "2020-10-28T03:24:16Z",
      "updated_at": "2020-10-28T03:24:16Z",
      "body": "Resolved in https://github.com/globalprivacycontrol/gpc-spec/pull/16",
      "user": "asoltani",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "The comment is requesting to have an issue (Resolved) reported and tracked on the GitHub repository for the Global Privacy Control Project. This suggests that it's a user request or suggestion, rather than a technical issue, use case, administrative task, conclusion/resolution, philosophical discussion, or something else."
    },
    {
      "id": 732450507,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/11",
      "created_at": "2020-11-23T21:59:28Z",
      "updated_at": "2020-11-23T22:01:10Z",
      "body": "Hi everyone,\r\n\r\nHere is a downside of setting `navigator.globalPrivacyControl` to `false` when the signal is disabled: https://github.com/EFForg/privacybadger/issues/2717\r\n\r\nA user with Privacy Badger (GPC on by default) and DuckDuckGo Privacy Essentials (GPC off by default) reported GPC not working. What happened is Privacy Badger's content script sets `navigator.globalPrivacyControl` to `true` (in page JS contexts), but DDG then comes in and overwrites `navigator.globalPrivacyControl` to `false`.\r\n\r\n(Content scripts get injected in ... extension installation order? May as well be random.)\r\n\r\nThis is the second time already Privacy Badger received a bug report with this behavior.\r\n\r\nI'm not completely clear on whether this is a problem with the spec or with the DDG extension. Apologies if this isn't in the right place. Just raising an issue we noticed over at Privacy Badger.",
      "user": "ghostwords",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment provides specific details about an observed behavior and suggests potential improvements to address it, which is a clear indication of technical feedback."
    },
    {
      "id": 732504580,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/11",
      "created_at": "2020-11-24T00:27:06Z",
      "updated_at": "2020-11-24T00:41:45Z",
      "body": "Hey @ghostwords, thanks for reporting this behavior. I just took a look and I think I see what's happening here.\r\n\r\nPrivacy Badger is setting the `navigator.globalPrivacyControl` property with the following [code](https://github.com/EFForg/privacybadger/blob/master/src/js/contentscripts/dnt.js#L31-L35):\r\n``` JavaScript\r\nOBJECT.defineProperty(OBJECT.getPrototypeOf(NAVIGATOR), \"globalPrivacyControl\", {\r\n  get: function globalPrivacyControl() {\r\n    return \"1\";\r\n  }\r\n});\r\n```\r\nThen DuckDuckGo Privacy Essentials is setting the `navigator.globalPrivacyControl` property with the following [code](https://github.com/duckduckgo/duckduckgo-privacy-extension/blob/develop/shared/js/content-scripts/GPC.js#L21-L28), which is overriding the value set by Privacy Badger (regardless of whether its run first or second):\r\n``` JavaScript\r\ntry {\r\n  Object.defineProperty(navigator, 'globalPrivacyControl', {\r\n    value: false\r\n  })\r\n} catch(e) {}\r\n```\r\nI put the `try...catch` block there in anticipation of other extensions having already set the value directly, which would make this throw an error (attempts to redefine a value defined this way will throw errors since it is by default non-configurable).\r\n\r\nSo basically what's happening here is we're using two different ways (defining the getter and defining the property value) to set the `navigator.globalPrivacyControl` value, and one is overriding the other. I think there are two potential solutions here:\r\n\r\n1. Set both the getter and the value, and wrap in a `try...catch` block. This would throw an error when the value has already been set via either method, which would prevent overriding a signal that's already been set by another extension:\r\n``` JavaScript\r\ntry {\r\n  // will throw error if getter has already been defined\r\n  Object.defineProperty(navigator, 'globalPrivacyControl', {\r\n    get: function globalPrivacyControl() {\r\n      return true;\r\n    }\r\n  })\r\n  // will throw error if value has already been defined\r\n  Object.defineProperty(navigator, 'globalPrivacyControl', {\r\n    value: true\r\n  })\r\n} catch(e) {}\r\n```\r\n2. Privacy Badger defines value directly instead of defining the getter. The reason I'm listing this as a potential solution but not listing DDG defining getter instead of value is because it appears that defining the value directly overrides defining the getter, but not vice versa.\r\n\r\nI'd be happy to make change 1 in the DDG extension to ensure better compat with other extensions, but first out of curiosity is there any reason why Privacy Badger is defining the getter instead of the value itself?",
      "user": "dharb",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "administrative",
      "reason": "This comment discusses a technical issue and proposes solutions that address it. It provides context about the behavior being reported and explains potential reasons behind certain actions taken by extensions. The comments do not explicitly state their purpose as \"Administrative\" or \"Technical Feedback,\" but they appear to be providing guidance and suggestions for improving compatibility between different browser extensions, which is a characteristic of administrative purposes."
    },
    {
      "id": 733150064,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/11",
      "created_at": "2020-11-24T18:13:54Z",
      "updated_at": "2020-11-24T18:13:54Z",
      "body": "I see, [data descriptors vs. accessor descriptors](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty). I suppose we use a getter because it's more flexible, but there is no particular need to use it at this point. We haven't run into cross-extension issues up until now.",
      "user": "ghostwords",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment provides feedback and insights about a specific topic (gettingters vs accessor descriptors in JavaScript), with suggestions for potential improvement or optimization, which is typical of technical feedback."
    },
    {
      "id": 733159882,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/11",
      "created_at": "2020-11-24T18:34:26Z",
      "updated_at": "2020-11-24T18:34:26Z",
      "body": "If a user has multiple GPC-capable extensions installed, but only one extension has GPC enabled, should the GPC signal be sent? If the answer is yes, then:\r\n\r\n- We should make sure to overwrite GPC in navigator in the most robust way when GPC is enabled, to handle cases when an extension that sets GPC to `false` was injected first. It sounds like this may not be possible depending on exactly how that extension set GPC to `false`.\r\n- Extensions that set GPC to `false` when GPC is disabled should take care to not overwrite GPC in navigator when a GPC-on extension's content script was injected first.\r\n\r\nWe wouldn't have this complexity if extensions didn't inject anything when GPC is disabled.",
      "user": "ghostwords",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "This comment is proposing a feature or behavior change that would improve the functionality of the application, specifically related to handling multiple GPC-capable extensions and their interactions. It also touches on potential complexities or edge cases arising from such scenarios."
    },
    {
      "id": 733957168,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/11",
      "created_at": "2020-11-25T21:37:17Z",
      "updated_at": "2020-11-30T17:04:21Z",
      "body": "@dharb By the way, we have a similar problem with `navigator.doNotTrack` where DDG overwrites the user's Do Not Track preference (from `\"1\"` to `null`), whether set via Privacy Badger or the browser's own DNT toggle.",
      "user": "ghostwords",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "The commenter is expressing a problem they have observed in a specific implementation of `navigator.doNotTrack`, which is causing it to overwrite the user's Do Not Track preference. This suggests that the commenter is seeking a fix or solution for this issue."
    },
    {
      "id": 736772505,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/11",
      "created_at": "2020-12-01T19:36:51Z",
      "updated_at": "2020-12-01T19:44:51Z",
      "body": ">If a user has multiple GPC-capable extensions installed, but only one extension has GPC enabled, should the GPC signal be sent?\r\n\r\nYes, definitely. If a user has any tool installed that has GPC on, the GPC signal should be sent.\r\n\r\nI agree 100% with your logic here. Extensions should set GPC to `true` using the most robust method possible, and should set GPC to `false` in a way that can be overridden by another extension that has GPC on. With this in mind, what do you think about the following extension implementation guidelines?\r\n\r\n#### GPC off:\r\nFirst check if `navigator.globalPrivacyControl` is defined. If yes, then do nothing. Otherwise set `navigator.globalPrivacyControl` to `false` on the prototype as follows:\r\n```` JavaScript\r\nif (typeof navigator.globalPrivacyControl !== \"undefined\") return\r\nObject.defineProperty(Object.getPrototypeOf(navigator), 'globalPrivacyControl', {\r\n    value: false\r\n})\r\n````\r\n\r\n#### GPC on:\r\nFirst check if `navigator.globalPrivacyControl` is defined and set to `true`. If yes, then do nothing. Otherwise set `navigator.globalPrivacyControl` to `true` as follows:\r\n```` JavaScript\r\nif (navigator.globalPrivacyControl) return\r\nObject.defineProperty(navigator, 'globalPrivacyControl', {\r\n    value: true\r\n})\r\n````\r\n\r\nThen if a user has two conflicting extensions that support GPC, say Extension1 and Extension2, and Extension1 is installed first:\r\n#### Extension1 has GPC on, Extension2 has GPC off\r\n- Since Extension2 was installed most recently, it will first set `globalPrivacyControl` to `false` on the navigator prototype\r\n- Then Extension1 will set `navigator.globalPrivacyControl` to `true`, which will override the prototype property. So `navigator.globalPrivacyControl` will return `true`\r\n#### Extension1 has GPC off, Extension2 has GPC on\r\n- Since Extension2 was installed most recently, it will first set `navigator.globalPrivacyControl` to `true`\r\n- Extension1 will see that `navigator.globalPrivacyControl` is truthy and not do anything\r\n\r\n@ghostwords if this approach or something similar works for you, maybe we could align and do something similar with other navigator properties we're setting via our extensions.",
      "user": "dharb",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "This comment asks a question about how to handle conflicting extensions that support different privacy controls. It suggests a feature request where users want the behavior of one extension to override another, which is not currently implemented in the way described."
    },
    {
      "id": 736828083,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/11",
      "created_at": "2020-12-01T21:21:25Z",
      "updated_at": "2020-12-01T21:21:25Z",
      "body": "Sounds good! Please take a look at https://github.com/EFForg/privacybadger/pull/2722",
      "user": "ghostwords",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment is providing specific feedback on the code being reviewed, namely that it seems like the implementation of privacy badger in the EFF org's GitHub repository needs a look. The comment does not request additional features or administrative actions, nor does it pose any questions or requests for philosophical discussions, and it does not conclude or resolve anything."
    },
    {
      "id": 754760339,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/12",
      "created_at": "2021-01-05T16:55:06Z",
      "updated_at": "2021-01-05T16:55:06Z",
      "body": "@michael-oneill I'm not sure why per-origin control would require a promise? If the user makes that decision in the browser or the extension the browser would understand that at the point of page load. Are you thinking of some other user flow? ",
      "user": "AramZS",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "The comment suggests an alternative approach to implementing per-origin control, specifically questioning whether a promise is truly necessary for this scenario. It implies that users may be able to understand the implications at the point of page load without needing a promise, which could simplify the codebase and improve performance."
    },
    {
      "id": 754787572,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/12",
      "created_at": "2021-01-05T17:40:24Z",
      "updated_at": "2021-01-05T17:43:27Z",
      "body": "The problem is how to make an internal record (i.e. a boolean) available so that script loaded synchronously on page initialisation so the browsing context gets an accurate value from the navigator.gpc property.The browser itself could maybe have an internal record, but it is hard for an extension to do it.\r\n\r\nA callback does not have that issue becase it only needs to occur once the determination is made (by examining non-origin storage out of process i.e. in a background script), and a promise is the modern way to achieve that. \r\n\r\nYou can do it employing some localStorage but it is quite hard to get it right, and it uses up some of the origin's storage that may get overwritten or cleared.\r\n\r\nI know this from developing a browse extension to implement the DNT API back in 2013.\r\n\r\n\r\n\r\n",
      "user": "michael-oneill",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides technical advice on how to solve a specific problem, which is making an internal record available for synchronization with page initialisation. The commenter also references their own experience developing a browsing context extension to implement the Do Not Track (DNT) API, indicating that they have hands-on knowledge of the issue and proposed solution."
    },
    {
      "id": 774561099,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/6",
      "created_at": "2021-02-06T23:44:21Z",
      "updated_at": "2021-04-16T04:14:41Z",
      "body": "FYI, I tried implementing this with a not-widely used extension, \r\nMan in the Middle v 3.5.3, from @dangkyokhoang.  https://github.com/dangkyokhoang/man-in-the-middle#text-headers has documentation. \r\nI **Add**ed a rule wherein I put `Sec-GPC: 1` in `Text headers`.\r\n\r\nAfter I put `http` in `URL filters`, Firefox started appearing to be doing the right thing, per Server-side detection at https://global-privacy-control.glitch.me/\r\n\r\nI'm posting _that_ as an FYI, but it leads me to ask: are we saying that this should be in _every single HTTP request_?  _[Edit:  Sebastian cleared up my confusion: Ignore: <s>Reading between the lines of issues here, it seems like we're switching to something less verbose (hopefully more sensible) where the browser queries a well-known with this header set and done</s>]_, but perhaps it really does need to be in every request.  Servers die, get rebooted, etc, so session state can't be guaranteed, especially when many actors are motivated for minimal (or less) effort.\r\n\r\n",
      "user": "elvey",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "The comment suggests that adding a rule of putting `Sec-GPC: 1` in `Text headers` may solve the issue of Firefox misinterpreting HTTP requests. However, this solution is not universally applicable and can have implications for other servers or contexts where session state may not be guaranteed."
    },
    {
      "id": 774561109,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/6",
      "created_at": "2021-02-06T23:44:28Z",
      "updated_at": "2021-02-06T23:44:28Z",
      "body": "And is it intentional that we're not specifying a California-specific string?  Good idea, or mistake?  I've no idea, but choice should be intentional.",
      "user": "elvey",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment is providing feedback on the design of the comment itself, specifically suggesting that the specification language used to describe states and actions in the code (e.g. \"California-specific string\") may not accurately reflect California's specific laws and regulations. This suggests a technical issue with the implementation rather than something else entirely."
    },
    {
      "id": 774752451,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/6",
      "created_at": "2021-02-07T20:12:23Z",
      "updated_at": "2021-02-07T20:12:23Z",
      "body": "> but it leads me to ask: are we saying that this should be in every single HTTP request? \r\n\r\nYes, that is the case. The GPC signal should be in every single HTTP request. The reasoning is exactly as you are describing, @elvey. We want to relieve the signal recipient from keeping state.\r\n\r\n> where the browser queries a well-known\r\n\r\nThe `.well-known` is intended as an answer. So, a browser or browser extension can surface to the user that a site respects GPC signals, for example.\r\n\r\n> And is it intentional that we're not specifying a California-specific string? Good idea, or mistake?\r\n\r\nIntentional. You can think of GPC as a mechanism that by itself does not have a legal meaning. It will receive its legal meaning from laws and regulations. For example, under the California Consumer Privacy Act Regulations, a GPC signal means the opt out from the sale of personal information. However, the signal can have a different legal meaning under another law. Legislators and regulators will specify the meaning for their jurisdiction.",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment provides feedback on how Google Private Communication Protocol (GPC) signals should be implemented in every single HTTP request to avoid requiring browser state management, as suggested by @elvey. It also mentions the intention behind the specification of a California-specific string and its legal meaning under different regulations."
    },
    {
      "id": 790677956,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/19",
      "created_at": "2021-03-04T14:57:36Z",
      "updated_at": "2021-03-04T14:57:36Z",
      "body": "The legal effects of the signal is dependent on the regulatory regimes in a user's jurisdiction.  Please see: https://globalprivacycontrol.github.io/gpc-spec/#legal-effects\r\n",
      "user": "asoltani",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides specific information about how the signal works and its implications for regulatory compliance, suggesting that it is intended to inform or clarify the technical aspects of the specification."
    },
    {
      "id": 790679088,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/18",
      "created_at": "2021-03-04T14:59:09Z",
      "updated_at": "2021-03-04T14:59:16Z",
      "body": "This is answered in the FAQ.  Please see question \"Why not just use Do Not Track (DNT)?\"   https://globalprivacycontrol.org/faq#DND",
      "user": "asoltani",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment provides information about a technical issue or inconsistency, suggesting that the answer to a specific question may be in an FAQ. The tone is neutral and informative, providing context rather than expressing opinion or requesting something else."
    },
    {
      "id": 790691743,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/19",
      "created_at": "2021-03-04T15:15:59Z",
      "updated_at": "2021-03-04T15:15:59Z",
      "body": "I'm not talking about the legal effects. I'm taking about this being vague in terms of what the user expects the site to do.\r\n\r\nDoes a website saying \"we honor GPC\" mean that \"we do not share data with anyone else at all\" or \"we share data in limited circumstances that are outlined in our privacy policy and are allowed according to our lawyer's interpretation of the regulatory regime\".\r\n\r\nIf someone connects to that website with Sec-GPC set to \"1\", how are the the website's operators support to handle this w.r.t. to sharing data in limited circumstances?\r\n- Should the site show a popup suggesting the user review the privacy policy?\r\n- Should the site not use 3rd-party analytics tools?\r\n- Should the site not use 3rd party CDNs for scripts/styles/fonts/etc?\r\n- Should the site refuse to let the user perform actions like making purchases that might lead to third-parties being notified?\r\n\r\n\r\n\r\n",
      "user": "robrwo",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment is providing detailed technical specifications and potential implementation details about how a website should handle security-related aspects, specifically related to General Data Protection Consent (GDPR). It appears to be focused on improving the usability and transparency of the site regarding data sharing practices."
    },
    {
      "id": 790698142,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/19",
      "created_at": "2021-03-04T15:25:10Z",
      "updated_at": "2021-03-04T15:27:21Z",
      "body": "Again, those will depend on the legal requirements in the jurisdiction that GPC is honored/invoked.\r\n\r\nIn California, where GPC is required under the CCPA, the definition of who is a third party and the manner/frequency with which a business can show a popup is outlined in the AG's rule making which you can find here: https://www.oag.ca.gov/sites/all/files/agweb/pdfs/privacy/oal-sub-final-text-of-regs.pdf?\r\n\r\nIn other jurisdictions where GPC may be adopted, those definitions and regulations may vary.  Please refer to the privacy framework in the jurisdiction in which you're concerned about.\r\n\r\n",
      "user": "asoltani",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "administrative",
      "reason": "This comment is providing administrative information or guidance regarding how to comply with a specific regulatory requirement (General Data Protection Commission - GPC) related to the definition of a third party and popup usage, specifically as outlined in an official government document. It does not request technical assistance, propose a new feature, or seek to discuss a philosophical approach."
    },
    {
      "id": 814706738,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/2",
      "created_at": "2021-04-07T08:15:54Z",
      "updated_at": "2021-04-07T08:15:54Z",
      "body": "When you're ready:\r\n  https://github.com/protocol-registries/well-known-uris",
      "user": "mnot",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment appears to be providing constructive feedback or suggestions on the well-known URIs, suggesting that they may require updates or improvements. This type of feedback is typically provided by experts in the field to help improve the documentation and usability of the resources."
    },
    {
      "id": 814707275,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/3",
      "created_at": "2021-04-07T08:16:35Z",
      "updated_at": "2021-04-07T08:16:35Z",
      "body": "What did you have in mind here? It should cache just like any other HTTP response...",
      "user": "mnot",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "The commenter is asking for a feature where an application (or service) can cache HTTP responses, similar to how browsers cache HTML pages. This suggests they are looking for a way to improve performance or reduce the number of requests being made to a server."
    },
    {
      "id": 814711749,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/6",
      "created_at": "2021-04-07T08:22:30Z",
      "updated_at": "2021-04-07T08:22:30Z",
      "body": "> When a structured header represents a boolean and the header is absent,\r\n\r\nThat isn't true (with all deference to the otherwise perennially correct @hober)\r\n\r\n> are we saying that this should be in every single HTTP request?\r\n\r\nI think it would be necessary in this approach, yes. I don't think that's an efficiency concern on the modern Web -- HPACK and QPACK will effectively amortise this to one transmission per connection, and (slightly) compress it in the process.\r\n\r\nWRT how many bytes; it's literally two bytes (`?1`) vs one (`1`). If [future, binary encodings](https://mnot.github.io/I-D/binary-structured-headers/) of Structured Fields get off the ground, it will be significantly more efficient (both in terms of bytes-on-the-wire and processing overhead) to use them.\r\n\r\nI think the extensibility question is the right thing to focus on here. If the value were under advertiser control (as `P3P` was), I'd say this is an easy decision; what problems are foreseen by allowing extension in a request header?\r\n\r\n\r\n\r\n",
      "user": "mnot",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "administrative",
      "reason": "The comment is about improving or modifying a specific approach to handling structured headers, particularly for the HTML5 specification. It discusses potential changes and their implications, including the possibility of introducing new complexities that would need to be addressed administratively."
    },
    {
      "id": 814905068,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/20",
      "created_at": "2021-04-07T13:14:51Z",
      "updated_at": "2021-04-07T13:14:51Z",
      "body": "@SebastianZimmeck Thanks for assigning this to me, but I've been saying that `version` serves no purpose and should be removed since the beginning! See also https://berjon.com/xmlbp-naive-versioning/.",
      "user": "darobin",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "The comment expresses a request to remove or modify the \"version\" field in the XML-BP document, suggesting that it is not necessary for functionality."
    },
    {
      "id": 814919215,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/20",
      "created_at": "2021-04-07T13:35:10Z",
      "updated_at": "2021-04-07T13:43:18Z",
      "body": "> but I've been saying that version serves no purpose and should be removed since the beginning!\r\n\r\nAs long as there is backward compatibility in case GPC is extended, I am personally fine with whatever mechanism can accomplish that. Essentially, if there is a best practice (and whichever that is), we should follow that practice as it will make it easier for implementers.",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment provides feedback on an existing code or system, suggesting improvements and proposing changes to achieve better practices. It does not ask a question, request additional information, or make a philosophical statement."
    },
    {
      "id": 814984489,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/20",
      "created_at": "2021-04-07T14:58:00Z",
      "updated_at": "2021-04-07T14:58:00Z",
      "body": "I am 100% a-okay to remove the field too.  I suggested it originally out of some \"always stick a version number on it\" advice I picked up\u2026\u00a0somewhere. But I'm convinced by @darobin that thats more cargo-cult-ish than materially useful. I'm \ud83d\udc4d on removing it too",
      "user": "pes10k",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "administrative",
      "reason": "The comment is primarily an administrative discussion, with the author expressing a change in their opinion and suggesting alternative practices (removing the field). There is no technical or practical feedback about the code itself."
    },
    {
      "id": 815004772,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/3",
      "created_at": "2021-04-07T15:24:06Z",
      "updated_at": "2021-04-07T15:24:06Z",
      "body": "This is here because DNT [does specify caching](https://www.w3.org/TR/tracking-dnt/#status-caching) and I wanted to be sure that I was not overlooking some reason to have specific caching rules. I think that the model we landed on for GPC means we don't need to care, but I wanted to check my assumptions.",
      "user": "darobin",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "administrative",
      "reason": "The comment is primarily concerned with clarifying assumptions and double-checking details rather than providing feedback or suggestions about technical aspects of a specific feature or model. It also includes some discussion of administrative tasks related to configuration or implementation."
    },
    {
      "id": 815176181,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/6",
      "created_at": "2021-04-07T19:41:49Z",
      "updated_at": "2021-04-07T19:41:49Z",
      "body": "> > When a structured header represents a boolean and the header is absent,\r\n> \r\n> That isn't true (with all deference to the otherwise perennially correct @hober)\r\n\r\nSorry for the noise caused by my terrible reading comprehension!",
      "user": "hober",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "philosophical",
      "reason": "This comment appears to be expressing an opinion or critique rather than providing a practical issue or solution. The author uses informal language and includes personal comments, such as \"with all deference\" and \"perennially correct\", which suggests that they are making a judgment about the quality of @hober's reading comprehension rather than offering constructive feedback."
    },
    {
      "id": 840785791,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/20",
      "created_at": "2021-05-13T19:36:02Z",
      "updated_at": "2021-05-13T19:36:02Z",
      "body": "We resolved this by removing `version` and adding `lastUpdate`. It's in the latest version.",
      "user": "darobin",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides detailed information about how something was fixed or changed, indicating that it offers a technical solution to an issue. The specific changes made are also mentioned, suggesting that the resolution is based on code modifications rather than a completely new feature or concept."
    },
    {
      "id": 840786386,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/3",
      "created_at": "2021-05-13T19:37:11Z",
      "updated_at": "2021-05-13T19:37:11Z",
      "body": "Having reviewed this more closely, I don't think we need to say anything specific.",
      "user": "darobin",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "use_case",
      "reason": "This comment primarily provides feedback on the approach or recommendation being suggested. It doesn't contain any technical details, nor does it seem to be a feature request, administrative notice, conclusion, philosophical discussion, or unknown type of feedback. It simply indicates that the suggestion is not necessary."
    },
    {
      "id": 840786671,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/1",
      "created_at": "2021-05-13T19:37:43Z",
      "updated_at": "2021-05-13T19:37:43Z",
      "body": "This is in the latest version, to the level that I believe is sufficient for the purposes at hand.",
      "user": "darobin",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment provides specific feedback about the quality and functionality of a software product, specifically mentioning its latest version. It suggests improvements or additional features based on the author's opinion, indicating that it falls under technical commentary aimed at improving the product."
    },
    {
      "id": 840788363,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/11",
      "created_at": "2021-05-13T19:40:59Z",
      "updated_at": "2021-05-13T19:40:59Z",
      "body": "I've taken @scottlow's change, which is definitely an improvement. I believe that the extension-related issues have been addressed separately \u2014 let me know if that's a problem!",
      "user": "darobin",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "The comment expresses a suggestion for how to improve a system or process, specifically mentioning a change made by someone else and asking about the impact on related extensions. This is characteristic of a feature request."
    },
    {
      "id": 840790294,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/12",
      "created_at": "2021-05-13T19:44:38Z",
      "updated_at": "2021-05-13T19:44:38Z",
      "body": "I understand where you're coming from, but I don't think that adding the overhead of a promise only to support extensions is a good compromise. Also, I would think that an allowlist managed by an extension should be at most of the order of tens of entries, thousands at the most (beyond that it's not a very good mechanism). This can readily by managed in memory and implemented synchronously.",
      "user": "darobin",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "use_case",
      "reason": "The comment discusses a specific concern with the approach taken to adding extensions to an API. It highlights a potential drawback of this approach, which is that extending functionality beyond certain limits becomes impractical due to the overhead added for support. This indicates that the intention behind providing extensions is not being fully realized or utilized effectively."
    },
    {
      "id": 840790644,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/13",
      "created_at": "2021-05-13T19:45:22Z",
      "updated_at": "2021-05-13T19:45:22Z",
      "body": "It's in, thanks!",
      "user": "darobin",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "administrative",
      "reason": "This is an informal expression of acknowledgement or acceptance from someone involved in handling incoming emails or messages. The context suggests that the comment was likely written by someone who is responsible for managing communication flow within a company or organization."
    },
    {
      "id": 841216440,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/12",
      "created_at": "2021-05-14T12:37:02Z",
      "updated_at": "2021-05-14T12:37:02Z",
      "body": "Its not only to support extensions, making the decision early enough to guarentee the signal would be hard for native browsers also.\r\nThe problem with synchronously using localStorage is it is accessable to other script, so could be amended by a third-party to simulate the presense or absense of a consent signal.\r\nAdTech lobbyists would use the resulting uncertainty to justify ignoring it.\r\n",
      "user": "michael-oneill",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides an opinion on a technical issue and proposes an alternative solution. It suggests that using localStorage synchronously can be problematic, raises concerns about the impact of third-party access on the implementation's credibility, and implies that AdTech lobbyists might use this uncertainty to their advantage in justifying ignoring the issue."
    },
    {
      "id": 882967454,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/21",
      "created_at": "2021-07-20T01:08:43Z",
      "updated_at": "2021-07-20T01:08:43Z",
      "body": "Thanks, @braedon! That seems even better. @darobin, what do you think?  ",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides specific feedback on the improvement made to a particular feature or functionality (\"seems even better\"), indicating that it is related to evaluating and refining the quality or usability of something."
    },
    {
      "id": 884488714,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/22",
      "created_at": "2021-07-21T20:47:18Z",
      "updated_at": "2021-07-21T20:47:18Z",
      "body": "Hello!\r\n\r\na) Since GPC is about asserting an opt-in privacy right, I dont know if an option to express a \"my browser knows about GPC but i don't want to assert the rights behind it\" preference is useful.  As regards to site behavior, I expect a `Sec-GPC: 0` value would be the same thing as sending nothing.    If a site wants to know that the user turned off GPC in response to the page's request, they can already do though a session cookie (or similar) and seeing that the GPC signal is no longer sent.\r\n\r\nAdding a third state thought to GPC (not sent, sent and 1, and / or sent and 0) adds fingerpritning surface, so unless there is a practical benefit to it, im still in favor of the current description.\r\n\r\nIs there a use case you have in mind that wouldn't be possible for a site to capture otherwise?\r\n\r\nb) By design, other GPC values are not supported.  This is by design, since turning into GPC into a preferece-broadcasting system would have significant risks in the short term (e.g., increased fingerprinting surface) and longer term (e.g., turning GPC into a system where browsers are expected to advertise the privacy preferences their local jurisdiction entitles them to, which would be very bad privacy wise.  A privacy feature that requires me to advertise my location to get privacy is a deeply flawed privacy system.\r\n\r\nHope this helps explain the design of GPC!  Im going to close the issue, though feel free to continue discussion below if you still have questions",
      "user": "pes10k",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "use_case",
      "reason": "The comment provides context and explanation for why the current state of the proposal is useful. It describes a specific scenario (site behavior) where the value `Sec-GPC: 0` would be appropriate, and mentions potential use cases that aren't possible without it. This suggests that the proposal is based on practical considerations and real-world scenarios rather than purely technical or philosophical discussions."
    },
    {
      "id": 884808662,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/22",
      "created_at": "2021-07-22T10:27:00Z",
      "updated_at": "2021-07-22T10:27:00Z",
      "body": "You've asked follow-up questions, but closed the issue. Does this mean a decision has been made and you don't want further feedback on this? \r\n\r\nRegardless - Yes, I have use-cases and practical reasons for why I discuss values. Right now GPC has a single interpretation based on CCPA (legally enforceable) and GDPR (legal interpretation). In the EU, there is no notion of 'sell' data or restricting only third parties from 'selling data' - though where consent is used the ability to withdraw that consent to _share_ data with third parties must exist separate from other consent matters. So 'sell' and 'share' are two distinct activities when it comes to how GPC is applied. The 'right to object' is separate and distinct from 'withdrawing consent'. \r\n\r\nRather than saying `GPC: 1` means all of these - which is problematic because it doesn't provide separation between all of these, GPC can be used to express not preferences, but 'rights'. So `GPC: 1` can mean do not share data with third parties on the basis of consent, object where legitimate interest is used for such sharing; and other values can assist in applying other rights.\r\n\r\nFor example; `GPC: 3` can mean share data for research (non-commercial entities) purposes. `GPC: 5` can mean apply objection to first parties legitimate interests as well. `GPC: 7` can mean apply objection to profiling and automated decision making. Values can be combined e.g. by using primes and combinations (e.g. 3 means 1 x 3, 15 means 1 x 3 x 5 applies and so on) or using bit values. Multiple values are feasible since GPC is transmitted not as a boolean but as an integer/character.",
      "user": "coolharsh55",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "This comment provides feedback and suggestions about the General Privacy Control (GPC) framework, proposing how to define and express different aspects of privacy preferences in a more nuanced way. It asks for clarification on how GPC is used and interpreted, specifically regarding two distinct activities involving data sharing - 'sell' and 'share'. The author suggests that these are separate values that can be expressed as part of the GPC framework, allowing for more complex expressions of privacy preferences."
    },
    {
      "id": 884817059,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/22",
      "created_at": "2021-07-22T10:43:17Z",
      "updated_at": "2021-07-22T10:43:17Z",
      "body": "As for fingerprinting, IMHO it is not a good strategy to say lets not give users more privacy management and preferences because it _may_ be used for fingerprinting. There *are* separate 'preferences' to mange: giving consent, withdrawing consent, consent for sharing data, consent for sharing data with first party only, consent for sharing data with third parties only, objecting to legitimate interest, objecting to profiling, objecting to direct marketing, objecting to automated decisions. GPC choosing only a few specific ones based on how CCPA works may not represent the best interests of users across the globe. If this is to be a web standard, then it must work for all web users. It has to address 'basic' concepts - either by making them explicit in the spec or by relying on their commonality.\r\n\r\nLike the previous comment says, EU doesn't have 'sell' as a data processing activity. Saying GPC prohibits sharing of data to any 'third party' is not enough - what is a third party also differs by jurisdiction! E.g. processors may or may not be third parties. Similarly, GPC doesn't consider what happens when data is 'shared' by joint-controllers - which is again a jurisdiction specific concept. So is the right to object. What happens when GPC implementation doesn't fulfill jurisdiction-based necessities such as these? Do we again invent a separate signal for these items? See [ADPC](https://www.dataprotectioncontrol.org/spec/). \r\n\r\nAs for inferring jurisdiction, the website is _needed_ to infer these, e.g. to see what laws to comply with. If serving to EU users, GDPR must be complied with. If serving to California users, CCPA must be complied with. GPC is not a barrier to inferring jurisdiction - this information is already present in other inferrable data: IP addresses and language/region/timezone settings.",
      "user": "coolharsh55",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides feedback on the technical aspects of the proposed General Data Protection Regulation (GDPR) framework, specifically addressing potential issues with the \"general privacy consent\" choice. It offers suggestions for improvement and clarifies points about jurisdiction, data sharing, and compliance with different regulations."
    },
    {
      "id": 884820975,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/22",
      "created_at": "2021-07-22T10:51:17Z",
      "updated_at": "2021-07-22T10:51:17Z",
      "body": "Regarding `GPC: 0` being the same as not sending a GPC signal is incorrect. `GPC: 0` *must* have an interpretation, otherwise any website, browser, user-agent that doesn't support GPC can assume user has set `GPC: 0` and claim data sharing is permitted!\r\n\r\n| I expect a Sec-GPC: 0 value would be the same thing as sending nothing. If a site wants to know that the user turned off GPC in response to the page's request, they can already do though a session cookie (or similar) and seeing that the GPC signal is no longer sent. - [pes10k](https://github.com/globalprivacycontrol/gpc-spec/issues/22#issuecomment-884488714)\r\n\r\nArguing that a cookie is needed to signal GPC is no longer set is not a good design IMHO. So you're asking the website to store cookies representing the GPC state, and then later checking that cookie each time there's no GPC signal to infer if the user has turned GPC off? Why not just have GPC specify its state? What if I actually want to enable sharing data with third parties because its an actually beneficial use-case and I believe they're good and not data vampires? E.g. I want to share that I read a news story posted on some other site to the actual news publisher. Yes, I want them to track how many views their story got, but they don't profile me. This is sharing data with third parties that would be prohibited by GPC. Just because the current malicious activity of third party data sharing is bad doesn't mean there are zero useful cases where data sharing is beneficial.\r\n",
      "user": "coolharsh55",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment provides technical feedback on why `GPC: 0` cannot be interpreted as sending no signal and offers suggestions for alternative solutions, such as using a session cookie to verify the GPC state. It also raises questions about design and proposes an alternative approach to handling GPC states."
    },
    {
      "id": 885129111,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/11",
      "created_at": "2021-07-22T18:12:47Z",
      "updated_at": "2021-07-22T18:14:02Z",
      "body": "Reading these comments, it seems like there is some confusion regarding the spec and how JavaScript accessors work.\r\n\r\nTrying to define a non-configurable accessor twice will throw an error. As I understand it (and as it has been implemented in Brave), this accessor should be configurable to user JS.\r\n\r\nI expect all implementations to work as such, since the IDL in the spec says that this is implemented on `Navigator` and not directly on `navigator`:\r\n\r\n```ts\r\nif (!Navigator.prototype.hasOwnProperty('globalPrivacyControl')) {\r\n  Object.defineProperty(Navigator.prototype, 'globalPrivacyControl', {\r\n    get: () => true, // or whatever the user has configured for GPC\r\n    configurable: true, // prevents errors when other scripts attempt to redefine this property\r\n    enumerable: true\r\n  });\r\n}\r\n```",
      "user": "eligrey",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides technical feedback on a specific implementation of an accessor in JavaScript. It explains why the code is implemented as it is and how it addresses a potential error that might occur, making it informative for improving or optimizing the code."
    },
    {
      "id": 885253999,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/11",
      "created_at": "2021-07-22T21:41:34Z",
      "updated_at": "2021-07-22T21:41:34Z",
      "body": "Thanks @eligrey, appreciate the feedback. I'm open to making this change in DDG's implementations, but would love to hear others' thoughts here as well. For background, there were two primary reasons we went with the current implementation:\r\n\r\n### Conflicts caused by competing defaults\r\nNot all implementations set GPC on by default. This can lead to two types of conflicts:\r\n1. User's browser or previously installed extension sets GPC on by default, then user unknowingly turns GPC off by installing an extension that implements GPC but doesn't turn it on by default. Ideally if a user's browser or any installed extension is setting GPC on, it shouldn't be overridden by another extension that is setting GPC off by default.\r\n2. User's browser or previously installed extension implements GPC but does not turn it on by default, then user installs extension that sets GPC on by default. This is only an issue if the extension first checks `if (!Navigator.prototype.hasOwnProperty('globalPrivacyControl'))` before setting the GPC DOM signal, since `Navigator.prototype.globalPrivacyControl` will already be defined as `false` here. Less concerned about this case, we can make it work.\r\n\r\n### Preventing scripts from tampering with GPC signal\r\nIf we allow the GPC DOM property to be configurable, it's possible for a malicious script (or website even) to change the value and prevent the signal from propagating correctly. That is to say, if a website checks `navigator.globalPrivacyControl` before each third party script is loaded, it's possible that this value may not reflect the user's preference. I like your suggestion in the other thread to use `Object.getOwnPropertyDescriptor(Navigator.prototype, 'globalPrivacyControl')?.get.call(navigator)`, but I'm not sure we can count on websites to check the value this way instead of just checking `navigator.globalPrivacyControl`. Either way, I think this is probably a pretty rare edge case and not such a big deal.",
      "user": "dharb",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides detailed information about the current implementation and potential improvements, which falls under the category of technical feedback. It also discusses potential issues with the design that could be improved or clarified further, which is another characteristic of technical feedback."
    },
    {
      "id": 885269870,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/11",
      "created_at": "2021-07-22T22:13:22Z",
      "updated_at": "2021-07-22T22:22:17Z",
      "body": "> ### Conflicts caused by competing defaults\r\n\r\n> Ideally if a user's browser or any installed extension is setting GPC on, it shouldn't be overridden by another extension that is setting GPC off by default.\r\n\r\nIMO users should be free to install extensions with conflicting behaviors. It's on implementors to try to coexist with each other. I'd prefer if extension-based and web-based implementations backed off if GPC is natively supported by the browser. If this signal is natively supported by the browser, then the browser vendor should provide a settings API which allows extension authors to modify this value.\r\n\r\n> ### Preventing scripts from tampering with GPC signal\r\n\r\nIf a script wants to tamper with GPC, I feel like that's fine. It should be up to the site owner and/or user as to what happens with this property. For example, a site owner's 1st-party JS or user's user agent (browser or extension) may polyfill or modify this feature.\r\n\r\nIf tamper prevention is an intended design goal for this API, you should add `[Unforgeable]` to the WebIDL in the spec. This should not affect API consumers.\r\n\r\nAlso, some clarification with `Object.getOwnPropertyDescriptor(Navigator.prototype, 'globalPrivacyControl')?.get.call(navigator)`: This doesn't actually make `navigator.globalPrivacyControl` references secure by itself. This kind of code is combined with cached interfaces that may need to be used post-init due to potentially hostile code trying to backdoor the post-init environment.\r\n\r\nFor example, I could securely resolve `navigator.globalPrivacyControl` post-init if I so wished, by building on top of references that I know are secure against code loaded later due to my script being the first to run:\r\n\r\n```js\r\n// assume potential prototype pollution post-init\r\n// assume all uninitialized variables in this example are cached references\r\nconst doSomething = () => {\r\n  if (navigator && gpcGetter) {\r\n    const GPC = call(gpcGetter, navigator);\r\n    if (GPC) {\r\n      // do something with GPC\r\n    }\r\n  }\r\n};\r\naddEventListener('some-event', doSomething, { once: true });\r\n```",
      "user": "eligrey",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides suggestions and ideas for improving a specific part of the specification. It proposes alternative approaches to implementing certain requirements and suggests additional considerations for ensuring security and correctness."
    },
    {
      "id": 886076433,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/22",
      "created_at": "2021-07-24T16:29:00Z",
      "updated_at": "2021-07-24T16:29:00Z",
      "body": "These are important points. For the time being, I think a binary signal will serve us well. Keeping it simple will make GPC easy to implement and to use. Essentially, it is a question for the user: do you want privacy? Yes or no.\r\n\r\n@darobin wrote up in a [blog post](https://berjon.com/gpc-under-the-gdpr/) how GPC can be interpreted under the GDPR. For the recipient of a GPC signal in a GDPR jurisdiction it would be reasonable to interpret it to mean that the user withdraws consent and objects to the processing of their data to the extent it is based on legitimate or public interest. This way GPC can be fitted in different jurisdictions allowing regulators to attach meaning under their local laws. ",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment provides detailed explanations and examples related to implementing a binary signal (GPC) as a user consent mechanism, specifically within the context of the General Data Protection Regulation (GDPR). It offers technical insights and suggestions for how to interpret GPC signals in different jurisdictions."
    },
    {
      "id": 886119314,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/22",
      "created_at": "2021-07-24T22:39:50Z",
      "updated_at": "2021-07-24T22:39:50Z",
      "body": "Thanks. I wrote up on some of the considerations of GPC and GDPR [here](https://harshp.com/research/blog/gpc-gdpr-can-it-work) before Robin's post, so its my opinion rather than a response. I agree with Robin's post, and the spirit of GPC. But disagree that there is a straightforward interpretation in GDPR. There isn't, and the GPC spec should, IMHO, clarify what it should mean under GDPR rather than asking the law to interpret how the signal may be used for it. Its the equivalent of the chicken and egg problem - what comes first? In this case, between the signal and the law, the signal must come first.\r\n\r\nAs to why different values: How can the same signal convey different actions depending on jurisdiction? In CCPA, it restricts 'selling' (Do Not Sell) which when compared with GDPR, is probably equivalent to restriction of sharing data with third parties for commercial(isation) purposes. GDPR does not have a notion of 'selling data', nor does it make a distinction between for-profit purposes. Yet, the [GPC mentions](https://globalprivacycontrol.github.io/gpc-spec/#legal-effects) that:\r\n\r\n> The GPC signal is intended to convey a general request that data controllers limit the sale or sharing of the user's personal data to other data controllers ([GDPR] Articles 7 & 21).\r\n\r\nSo already here there is an incompatibility between what the signal means depending on whether one happens to be in California or EU (sell vs share). Furthermore,  'third parties', as I mentioned before, are also different concepts across jurisdictions. So the spec should also clarify these because otherwise it remains incompatible with jurisdictional laws. The law can, at most, say signal should be respected in matters of consent or preferences (e.g. ePrivacy Regulation in EU). However, the signal/spec itself must be clear on what its interpretation means. For GPC, CCPA provides an enforceable basis for simply stating 'do not sell', which already exists codified in law. Unfortunately, this has no equivalent in GDPR. There is no 'do not share' signal or right. A generalised  solution would be saying:\r\n\r\n> GPC is \"a signal that indicates restriction of data sharing with third parties\" - and keeping the legal basis (e.g. consent) outside this. Thus, when the signal is active/set, and the legal basis happens to be consent, it indicates the data subject has chosen not to consent to such sharing, or is withdrawing the consent. If the legal basis is legitimate interest, they object to such sharing. This is much clearer IMHO than saying \"withdraws consent\" without being specific as to which consent, or why. \r\n\r\nIf adopted, this then creates an incompatibility between 'do not sell' and 'do not share' (as above) because sell and share do not mean the same thing. And given that GPC is already enforceable in CCPA, its intention and interpretation cannot be changed retrospectively. That's why the original proposal for multiple values as an exploration of how to resolve this.",
      "user": "coolharsh55",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment provides feedback on the proposed General Privacy Control (GPC) specification and GDPR, discussing issues with the current approach and suggesting potential solutions. The commenter is providing technical expertise to help improve the GPC spec based on their understanding of GDPR and its requirements."
    },
    {
      "id": 886122089,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/22",
      "created_at": "2021-07-24T23:13:04Z",
      "updated_at": "2021-07-24T23:13:04Z",
      "body": "Thanks for the input @coolharsh55 \r\nWe'll take it under advisement.",
      "user": "asoltani",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "administrative",
      "reason": "This response is related to an internal administrative matter, such as acknowledging and handling user feedback or messages. It does not require any technical expertise or provide significant information that would typically be considered a \"use case\" or \"feature request\". The tone is polite and professional, suggesting that the message has been acknowledged by someone in an organization and is now on file for future reference."
    },
    {
      "id": 886217468,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/22",
      "created_at": "2021-07-25T15:25:30Z",
      "updated_at": "2021-07-25T17:33:43Z",
      "body": "The server could indicate what the signal means to it (i.e. taking into account what legal jurisdiction etc.), either in the gpc.json resource or preferably in a response header. \r\nThis removes some of the fingerprinting risk.\r\nRegulators in particular jurisdictions could mandate the response, \r\nBrowsers could show the user the server response in suitable standardised UI.\r\n",
      "user": "michael-oneill",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides specific technical suggestions and advice for improving a solution (the server), which falls under the category of \"Technical Feedback\"."
    },
    {
      "id": 923632631,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/23",
      "created_at": "2021-09-21T05:14:03Z",
      "updated_at": "2021-09-21T05:14:03Z",
      "body": "Thanks for the suggestion, @othermaciej! We are discussing GPC in Privacy Community Group [here](https://github.com/privacycg/proposals/issues/10). Feel free to chime in ...",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides constructive feedback about a specific piece of code or suggestion, indicating that it is intended for improvement and may be used to enhance the quality or functionality of the project."
    },
    {
      "id": 929497015,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/23",
      "created_at": "2021-09-28T18:02:55Z",
      "updated_at": "2021-09-28T18:02:55Z",
      "body": "If you want to discuss further here, @othermaciej, feel free to reopen this issue. ",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "use_case",
      "reason": "The comment is asking for someone else's (@othermaciej) input or feedback on a specific issue that has been discussed in the same thread, indicating it is related to using the platform or software and requires further discussion."
    },
    {
      "id": 940363177,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/24",
      "created_at": "2021-10-11T18:56:45Z",
      "updated_at": "2021-10-11T18:56:45Z",
      "body": "Agreed \u2014 this is a small change, and we should do it.",
      "user": "darobin",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "use_case",
      "reason": "The comment provides feedback on a specific action or decision, namely agreeing that the change is necessary. It does not provide any technical information, feature details, or administrative context, which are typically characteristics of other categories. Instead, it focuses on the subjective aspect of the situation, making it a use case."
    },
    {
      "id": 940365750,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/24",
      "created_at": "2021-10-11T19:01:29Z",
      "updated_at": "2021-10-11T19:01:29Z",
      "body": "I'm thinking replacing [what we have](https://globalprivacycontrol.github.io/gpc-spec/#webidl-1311723487) with:\r\n\r\n```\r\npartial interface GlobalPrivacyControl {\r\n  readonly attribute boolean globalPrivacyControl;\r\n}\r\nNavigator includes GlobalPrivacyControl;\r\nWorkerGlobalScope includes GlobalPrivacyControl;\r\n```\r\n\r\nWould that work for you @smaug----?",
      "user": "darobin",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides detailed and technical suggestions about the implementation of a specific code snippet, which is typical of technical feedback. The author offers alternative syntax or improvements to achieve better functionality without asking for permission, resolution, or offering additional context."
    },
    {
      "id": 940376695,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/24",
      "created_at": "2021-10-11T19:17:47Z",
      "updated_at": "2021-10-11T19:17:47Z",
      "body": "Or do you want\r\n```\r\n\r\ninterface mixin GlobalPrivacyControl {\r\n  readonly attribute boolean globalPrivacyControl;\r\n}\r\nNavigator includes GlobalPrivacyControl;\r\nWorkerNavigator includes GlobalPrivacyControl;\r\n\r\n```\r\n\r\nhttps://webidl.spec.whatwg.org/#using-mixins-and-partials\r\nhttps://html.spec.whatwg.org/#the-workernavigator-object",
      "user": "smaug----",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides technical details about the WebIDL (Web API Description Language) specification, specifically about how to use mixins and partials. It explains a piece of code in detail, which is typically provided as feedback for improvement or clarification purposes rather than an idea for a new feature or a philosophical discussion."
    },
    {
      "id": 940381862,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/24",
      "created_at": "2021-10-11T19:23:54Z",
      "updated_at": "2021-10-11T19:23:54Z",
      "body": "`interface mixin` is what I meant \u2014 `WorkerNavigator` I hadn't thought about, but yes indeed. Will do thanks.",
      "user": "darobin",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment provides constructive feedback on the code, suggesting that a specific term (\"interface mixin\") was not used correctly, and offering an alternative solution (\"WorkerNavigator\"). This type of comment is typically provided by developers to improve or correct existing code."
    },
    {
      "id": 974518077,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/25",
      "created_at": "2021-11-19T22:37:08Z",
      "updated_at": "2021-11-19T22:37:08Z",
      "body": "The way W3C standards work is that [adoption precedes standardisation](https://www.w3.org/2021/Process-20211102/#implementation-experience), and we're seeing strong adoption.\r\n\r\nThis is an issue tracker for technical discussion about the GPC standard, please don't use it for general questions and without using a descriptive subject. The [official site](https://globalprivacycontrol.org/) has an FAQ and contact details for the project.",
      "user": "darobin",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides detailed information about the W3C standards process, specifically discussing how adoption precedes standardization. It's a factual and informative piece of feedback meant to help improve technical discussions."
    },
    {
      "id": 993603781,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/21",
      "created_at": "2021-12-14T14:35:50Z",
      "updated_at": "2021-12-14T14:35:50Z",
      "body": "Please also add \"be\" to the following sentence:\r\n\r\n     MUST an ISO 8601 date\r\n\r\nAlso, need a reference for either RFC 3339 or ISO 8601.",
      "user": "seanturner",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment is providing technical feedback on a proposal or suggestion, specifically regarding the format of a date string. It provides clarification and correction, which are typical characteristics of technical feedback."
    },
    {
      "id": 996180932,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/21",
      "created_at": "2021-12-16T20:45:05Z",
      "updated_at": "2021-12-16T20:45:05Z",
      "body": "Thanks, @braedon and @seanturner. I changed the spec to RFC3339 and fixed the typo. ",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "use_case",
      "reason": "The comment is expressing gratitude to two users for helping with a technical issue (changing the specification to RFC3339) and providing a correction for a typo, which is an action related to software development or maintenance that impacts its quality and functionality."
    },
    {
      "id": 1023662209,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/2",
      "created_at": "2022-01-27T21:38:26Z",
      "updated_at": "2022-01-27T21:38:26Z",
      "body": "Filed https://github.com/protocol-registries/well-known-uris/issues/21",
      "user": "darobin",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment is providing technical information about an issue or bug reported in the GitHub repository for the well-known uris registry. It's suggesting a solution to fix the problem, which could be related to security, functionality, or performance of the system. The tone appears to be professional and objective, with no apparent emotional or personal aspect."
    },
    {
      "id": 1023669912,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/4",
      "created_at": "2022-01-27T21:50:38Z",
      "updated_at": "2022-01-27T21:50:38Z",
      "body": "Fixed in 6b6c943.",
      "user": "darobin",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment is providing feedback on a specific version of a code or software, indicating that it has been fixed. This type of comment is typically from someone who has reviewed and validated the changes made to address an issue or bug."
    },
    {
      "id": 1025687681,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/6",
      "created_at": "2022-01-31T12:26:20Z",
      "updated_at": "2022-01-31T12:26:20Z",
      "body": "I think we clarified this point and can move on as is, right?",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "use_case",
      "reason": "The comment expresses an agreement or confirmation about moving forward with a particular aspect of the conversation, which indicates that it is related to the use case or workflow discussed earlier."
    },
    {
      "id": 1035047443,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/27",
      "created_at": "2022-02-10T15:22:42Z",
      "updated_at": "2022-02-10T15:22:42Z",
      "body": "I agree, @brodrigu, readability is important. Though, my preference would be to leave the values as they are. For binary values `1` usually means `on`. Also, other standards have similar notation, especially, [DNT = 1](https://www.w3.org/TR/tracking-dnt/#dnt-header-field) is pretty similar to our use case.",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides a suggestion for improving the readability of binary values by suggesting to leave them as they are, and also recommends that other standards follow this notation. The tone is constructive and informative, aiming to improve the documentation or specification."
    },
    {
      "id": 1035103987,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/27",
      "created_at": "2022-02-10T16:08:58Z",
      "updated_at": "2022-02-10T16:08:58Z",
      "body": "`DNT` stood for Do Not Track which made it intuitive that when `DNT=1` (assuming you knew what DNT stood for) the request was to not be tracked.\r\n\r\nWith `Sec-GCP = 1` if you know GCP stands for Global Privacy Control suggests there is some request for control, but control does not inherently mean \"do not sell / share\".\r\n\r\nI agree that keeping the value `1` makes sense, and if that is the priority then I suppose the ask is to adjust the header name to be more readable.",
      "user": "brodrigu",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment provides constructive feedback on how the code or system can be improved by suggesting a change (adjusting the header name) in response to specific information provided, which is characteristic of technical comments that offer advice and guidance for improvement."
    },
    {
      "id": 1035262277,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/27",
      "created_at": "2022-02-10T18:10:43Z",
      "updated_at": "2022-02-10T18:10:43Z",
      "body": "I don't think we should change the header name.  This is ultimately an implementation detail, and as long as the meaning is clear and can be looked up by a curious party easily, i dont think we need a full english description sent in every HTTP request.  Or in other words, i don't think GPC needs to run in debug mode ;)",
      "user": "pes10k",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides feedback on the implementation of a specific feature (header name) and suggests an optimization that could potentially improve the performance or user experience, although it does not explicitly request changes."
    },
    {
      "id": 1076757427,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/28",
      "created_at": "2022-03-23T19:51:01Z",
      "updated_at": "2022-03-23T19:51:01Z",
      "body": "> Shouldn't the client-side be reading the value of the header?\r\n\r\nIndependently of whether you set GPC via a header or JavaScript property, the GPC signal would need to be sent from the client to the server. For example, for every web request that you send via Brave, you should see the GPC header attached to it. You can use [OptMeowt](https://chrome.google.com/webstore/detail/optmeowt/hdbnkdbhglahihjdbodmfefogcjbpgbo) to turn GPC on and off for individual domains. We provide [client- and server-side sample implementations for setting GPC](https://global-privacy-control.glitch.me/). ",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "The comment is asking about the implementation of a specific feature (GPC signal sending from client to server) and provides a solution (using OptMeowt extension or sample implementations provided by Glitch), which suggests that it's a request for code enhancements."
    },
    {
      "id": 1132072598,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/29",
      "created_at": "2022-05-19T18:45:03Z",
      "updated_at": "2022-05-19T18:45:03Z",
      "body": "Hi @KoopaKing \r\n\r\nI'm not entirely clear on what you are requesting. If this is a question about a response to the on-page `navigator` Javascript object that GPC is providing, that API does not respond and you should not send messages to it. Generally [the way you say your site is listening for GPC is to have the `.well-known` resource](https://globalprivacycontrol.github.io/gpc-spec/#gpc-support-representation). \r\n\r\nIf you are asking about a HTTP response on the basis of the request coming in with a GPC header, the spec does not suggest a specific response or response code. I'd suspect that your response will change on the basis of why you are rejecting the request. The 451, 403, 412 [and more error codes](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes) might be appropriate depending on both the reason and style of the rejection. That said, some laws have specific language around not forbidding users access on the basis of a privacy choice and you should consult with a lawyer before choosing to reject a request because it has a privacy preference attached. \r\n\r\nDoes that answer your question @KoopaKing ?",
      "user": "AramZS",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "administrative",
      "reason": "The comment is providing information and guidance about how to handle requests based on GPC (Global Privacy Control) preferences, which suggests an administrative purpose rather than feedback or a request for improvement."
    },
    {
      "id": 1132167655,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/29",
      "created_at": "2022-05-19T20:20:26Z",
      "updated_at": "2022-05-19T20:22:25Z",
      "body": "@AramZS yes that does answer my question. I was really asking about the latter, for requests coming into an API server that happen to specify this, it seems like if the API implementor was not sure of the legal requirements associated with handling a specific request, they may opt for not processing and instead returning an appropriate error.\n\nI agree that depending on the exact reason for thinking the request cannot be processed different error codes may be correct, but I had originally thought that there may be some use in a standardized code or response type for this situation.\n\nMy use case was mostly just exploritory. Specifically I have some REST APIs that use gRPC+Go on the backend and was adding a request processor to easily access the GPC indicator on the request, and make canned decisions before handing the request off to the business logic layer. As a library it seemed like one way you would want to configure it would be to deny requests with the GPC indicator that also meet some conditions (maybe a source IP range believed to be in an unsupportable location). I thought I'd ask if the project itself had a recommendation for standardized \"I can't process this in a guaranteed GPC-compatible way\" response. If not, all good.\n\nThanks for the response!",
      "user": "KoopaKing",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "use_case",
      "reason": "The comment discusses the potential need for a standardized response type when dealing with requests that are supposed to be compliant with a specific legal requirement (GPC indicator) but ultimately cannot be processed due to various reasons. This is related to the use case of implementing business logic on top of REST APIs using gRPC+Go, where the library author wants to determine if the request should be denied based on certain conditions, and would like guidance on this aspect."
    },
    {
      "id": 1275451064,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/6",
      "created_at": "2022-10-12T01:01:53Z",
      "updated_at": "2022-10-12T01:01:53Z",
      "body": "Another consideration that comes up routinely when dealing with HTTP fields is the potential for them to be repeated, which can happen by accident more often than expected.  Under those conditions, it is possible that the values are combined.\r\n\r\nIn this case, that could produce results like `Sec-GPC: 1, 1` at a receiving entity.  A simple parser that does simple comparisons (`headers.get(\"sec-gpc\") == \"1\"`) will make a mistake.\r\n\r\n> I think the extensibility question is the right thing to focus on here.\r\n\r\nI agree.  Though we do want this to be easy to process, there is no guarantee that a very simple - and franky, bespoke - design is going to be more robust.  That is true even in if extensibility is never sought or even expressly forbidden, as shown above.",
      "user": "martinthomson",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "The commenter raises a concern about the potential for repeated HTTP fields (e.g., `Sec-GPC`) being combined unexpectedly due to accidental repetition. They suggest that this issue could lead to incorrect results in certain scenarios, and advocate for considering extensibility as a key factor when designing this feature."
    },
    {
      "id": 1293784074,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/33",
      "created_at": "2022-10-27T16:29:48Z",
      "updated_at": "2022-10-27T16:29:48Z",
      "body": "[This resource](https://well-known.dev/?q=resource%3A%22gpc%22) lists a number of sites that produce the signal already.  I don't have an easy summary of how many of these say `gpc: true`.",
      "user": "martinthomson",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides specific feedback about a website, stating that it's producing GPC and asks for an easy way to determine how many sites report \"gpc: true\"."
    },
    {
      "id": 1293854650,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/33",
      "created_at": "2022-10-27T17:35:43Z",
      "updated_at": "2022-10-27T17:35:43Z",
      "body": "You can use the [gpc_support](https://well-known.dev/?q=resource%3A%22gpc%22+gpc_support%3Atrue#results)  filter to find sites that say `gpc: true`.\r\n\r\n[Here's the latest summary](https://twitter.com/gpcsup/status/1585632442634801153) from the Twitter bot. Note that its stats also filter out subdomains.",
      "user": "braedon",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "This comment appears to be a request for a new feature or functionality, specifically the ability to filter sites based on their `gpc: true` statement using a specific [filter](https://well-known.dev/?q=resource%3A22+filter)."
    },
    {
      "id": 1295238616,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/34",
      "created_at": "2022-10-28T17:01:12Z",
      "updated_at": "2022-10-28T17:01:12Z",
      "body": "I'm taking a stab at flexibility for this here: https://github.com/globalprivacycontrol/gpc-spec/pull/39\r\n\r\nIt's not fully answering your question but makes it clear the door is at least open to it.",
      "user": "arichiv",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment provides constructive feedback and suggestions, indicating that it aims to improve the code or its functionality, rather than proposing a change or asking for information. It's aimed at helping others understand or enhance their work."
    },
    {
      "id": 1302486259,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/40",
      "created_at": "2022-11-03T18:04:31Z",
      "updated_at": "2022-11-03T18:04:31Z",
      "body": "Versioning inside of HTTP headers is a bit of an anti-pattern. It's better to just mint a new header field if you need to make backwards-incompatible changes.",
      "user": "mnot",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "use_case",
      "reason": "This comment provides a technical suggestion for improving the current behavior or implementation of something, rather than offering feedback on its usability, design, functionality, or any other aspect that would typically be classified under \"Administrative\" or \"Conclusion/Resolution\". It is intended to inform and improve the existing system by suggesting an improvement (minting new header fields) rather than simply describing what works well."
    },
    {
      "id": 1329269986,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/39",
      "created_at": "2022-11-28T15:10:53Z",
      "updated_at": "2022-11-28T15:10:53Z",
      "body": "@darobin for review",
      "user": "arichiv",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment is providing feedback on the code, specifically suggesting improvements."
    },
    {
      "id": 1329270171,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/38",
      "created_at": "2022-11-28T15:10:58Z",
      "updated_at": "2022-11-28T15:10:58Z",
      "body": "@darobin for review",
      "user": "arichiv",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment appears to be a form of technical feedback, where someone is providing constructive criticism or suggestions on how to improve something. The use of the \"@\" symbol and the specific language (\"for review\") also suggest that it's intended to provide input rather than an opinion or proposal."
    },
    {
      "id": 1329338304,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/39",
      "created_at": "2022-11-28T15:56:06Z",
      "updated_at": "2022-11-28T15:56:06Z",
      "body": "Thanks for filing a PR, but I don't believe that this change is correct. The name \"global\" comes from its legal roots, it means that it can apply everywhere but not that it has to be consistent everywhere. It is perfectly permissible for UAs to choose to make exceptions, or to have some kind of rule system to apply it selectively and differently per origin. The important part is the automation.",
      "user": "darobin",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides specific feedback on a technical aspect (the name \"global\") by suggesting alternative interpretations and justifications for its use, which can be useful in debugging or optimizing code. It does not express an opinion about the change's value or impact beyond that it is technically incorrect, but rather focuses on clarifying the purpose behind the original intent of the word \"global\"."
    },
    {
      "id": 1334333785,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/41",
      "created_at": "2022-12-01T20:01:27Z",
      "updated_at": "2022-12-01T20:01:27Z",
      "body": "@martinthomson I thought we might use your exact language from #36 here instead, but wanted to open up a area for discussion of how best to represent this.",
      "user": "AramZS",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "use_case",
      "reason": "The comment is about the potential reuse or repurposing of existing code or language (from #36) and requests discussion on how best to approach it. This involves exploring alternative representations, which falls under the category of use case exploration and improvement."
    },
    {
      "id": 1343278021,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/33",
      "created_at": "2022-12-08T19:56:01Z",
      "updated_at": "2022-12-08T19:56:01Z",
      "body": "Hi @martinthomson , this feature (the .well-known) is important for a couple of reasons:\r\n\r\n1. Unlikely most other browser features, a site supporting GPC won't have any immediate, user (or browser) noticeable effects. This is very different than almost every other browser feature\r\n2. the risk in terms of implementation complexity seems very very small\r\n3. We expect that measuring site adoption will be important for a number of reasons (from regulators, academics / activists, auditors, etc) and so something like .well-known is needed (and .well-known seems simpler than other possibilities, like a fixed HTTP response header)",
      "user": "pes10k",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment provides detailed analysis and suggestions for the implementation of a specific feature (.well-known) in browsers, highlighting its importance, potential complexity, and expected benefits. It does not contain personal opinions or complaints, nor is it focused on administrative tasks, conclusions, or philosophical discussions that might be characteristic of other types of comments."
    },
    {
      "id": 1343288576,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/42",
      "created_at": "2022-12-08T20:04:15Z",
      "updated_at": "2022-12-08T20:04:59Z",
      "body": "@AramZS small suggestion, but I think it'd be even cleaner to just say \"return a `ISO-8601` date\", and not inline the regex / format itself.\r\n\r\nSomething like, instead of\r\n\r\n> A <code>lastUpdate</code> member. The value of the <code>lastUpdate</code> member MUST be an RFC3339 <code>full-date</code> (YYYY-MM-DD) or <code>date-time</code> (YYYY-MM-DDTHH:MM:SS(?:0+)?TZ) [[RFC3339]]. This indicates the time at\u2026\r\n\r\nthen\r\n\r\n> A <code>lastUpdate</code> member. The value of the <code>lastUpdate</code> member MUST be a ISO-8601 formatted date string.  This indicates the time at\u2026",
      "user": "pes10k",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "administrative",
      "reason": "The comment is discussing the format of the `lastUpdate` field, which is being suggested for improvement to conform with specific standards (RFC3339). It does not require technical expertise or a solution that involves coding changes, but rather an interpretation and clarification of existing requirements."
    },
    {
      "id": 1343329934,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/34",
      "created_at": "2022-12-08T20:43:29Z",
      "updated_at": "2022-12-08T20:43:29Z",
      "body": "> Does this make it impossible to default to enabling GPC in private browsing modes, only with appropriate interface affordances, or only in some jurisdictions?\r\n\r\nThe answer to these questions depends on the laws and regulations in a particular jurisdiction. For example, [per the CCPA](https://oag.ca.gov/sites/all/files/agweb/pdfs/privacy/ccpa-fsor-appendix-e.pdf), a consumer\u2019s choice of using privacy-preserving browsers or other tools is considered a sufficiently deliberate act that is interpreted as a consumer expression of a preference to not have personal information sold or shared:\r\n\r\n> The consumer exercises their choice by affirmatively choosing the privacy control [...] including when utilizing privacy-by-design products or services.\r\n\r\nMaybe, in other cases turning on a privacy mode of a \"normal\" product or service is sufficient to also turn on GPC by default in this mode.\r\n\r\nTo leave this flexibility we may want to take out [section 5.1](https://globalprivacycontrol.github.io/gpc-spec/#user-interface-language).",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "administrative",
      "reason": "The comment discusses the technical implementation of Google Play Console Privacy Control (GPC) and provides context for how it might be used, but does not provide any feedback or criticism on its design. It also presents a legal perspective on the subject by referencing specific laws such as the California Consumer Privacy Act (CCPA), which suggests that the comment is providing administrative guidance rather than offering technical feedback."
    },
    {
      "id": 1343412179,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/35",
      "created_at": "2022-12-08T21:44:37Z",
      "updated_at": "2022-12-08T21:44:37Z",
      "body": "> > websites MAY interpret an expressed Global Privacy Control preference as they find most appropriate\r\n> \r\n> This one might be unavoidable, but this is effectively a meaningless statement. Consider avoiding normative language and instead concentrate on the intended semantics of carrying the signal. The real teeth in this mechanism lies in the legal enforcement part, so explain that more directly rather than use a \"In the absence of regulatory, legal, or other requirements\" preface to this statement.\r\n\r\nThis could be addressed by including a cross-reference to \u00a7 5 (Legal Effects) after the prefatory phrase.\r\n\r\n\r\n\r\n\r\n> > User agents SHOULD strive to represent what the user agent best believes to be the person's [preference](https://globalprivacycontrol.github.io/gpc-spec/#dfn-preference) for the Global Privacy Control value.\r\n> \r\n> This could easily be a \"MUST\".\r\n\r\nDifferent jurisdictions are going to have different UX requirements. One country may require an express act to turn on the signal, another may say that the choice of a privacy-specific browser or browsing mode is sufficient to imply intent. Still others may be entirely silent, or they may say that the signal should _always_ be sent by default to accord with the reasonable expectations of most users. I think SHOULD is appropriate to express the general subjective principle of reflecting user intent while affording the flexibility necessary to accommodate varying legal regimes.",
      "user": "j-br0",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "use_case",
      "reason": "The comment primarily addresses the implementation details and implications of the Global Privacy Control mechanism, including how it should be implemented by user agents and how different jurisdictions handle its usage. It discusses the potential differences in UX requirements across various countries and does not focus on providing technical feedback or explicitly seeking to change the underlying code or specification."
    },
    {
      "id": 1343453648,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/40",
      "created_at": "2022-12-08T22:24:00Z",
      "updated_at": "2022-12-08T22:24:00Z",
      "body": "The [GPC support resource](https://globalprivacycontrol.github.io/gpc-spec/#gpc-support-representation) has a date and time that is intended for future-proofing and also give implementers flexibility:\r\n\r\n> This indicates the time at which the statement of support was made, such that later changes to the meaning of the GPC standard should not affect the interpretation of the resource for legal purposes. ",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment is providing technical information and clarification about a specific aspect of the Global Privacy Control (GPC) support resource, which suggests it is intended to help improve or correct existing documentation."
    },
    {
      "id": 1343455748,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/36",
      "created_at": "2022-12-08T22:26:10Z",
      "updated_at": "2022-12-08T22:26:10Z",
      "body": "@pes10k [further revised the language](https://github.com/globalprivacycontrol/gpc-spec/pull/41#pullrequestreview-1210618600).",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides constructive feedback on a pull request, specifically suggesting that there needs to be further work done in the new language."
    },
    {
      "id": 1343460661,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/31",
      "created_at": "2022-12-08T22:32:20Z",
      "updated_at": "2022-12-08T22:32:20Z",
      "body": "Thanks for pointing out this issue, @coolharsh55! It is resolved now. ",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides constructive feedback to the developer who reported an issue, indicating that it has been resolved and acknowledging the developer's effort."
    },
    {
      "id": 1343461767,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/28",
      "created_at": "2022-12-08T22:33:40Z",
      "updated_at": "2022-12-08T22:33:40Z",
      "body": "@martymcflyDMC, please feel free to reopen if you think this needs further discussion. ",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment is a request for the person who sent it (MartymcFlyDmc) to consider re-opening a topic that has been discussed earlier. The tone is polite and friendly, indicating that the commenter is seeking clarification or more information before moving forward with further discussion."
    },
    {
      "id": 1343768806,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/42",
      "created_at": "2022-12-09T02:42:34Z",
      "updated_at": "2022-12-09T02:42:34Z",
      "body": "ISO-8601 defines a variety of ways to serialise dates; it's quite complex. That's why 3339 profiles it...",
      "user": "mnot",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides constructive feedback on the technical details of a specific concept, specifically highlighting a limitation or a need for improvement (in this case, the complexity of ISO-8601) and suggesting an alternative solution."
    },
    {
      "id": 1343877333,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/33",
      "created_at": "2022-12-09T05:40:28Z",
      "updated_at": "2022-12-09T05:40:28Z",
      "body": "Hi @pes10k, of these, only the third strikes me as an actual reason.  It's not a terrible reason, but I'm concerned that the mechanism comes with downsides that are being disregarded.\r\n\r\nWhat I really want to hear is that there is some legally-relevant reason for making a commitment, and whether this sort of resource would be consider adequate toward that end (as in non-repudiable if necessary, etc...).  A better outcome - at least from the legal effect of the system - might be to have no need for any such commitment.\r\n\r\nI'm less convinced by the need to monitor for compliance.  Many sites have privacy policies that could adopt common language about compliance with GPC.  Given the need to understand the complexities of how data is handled by sites and their partners and subsidiaries, I see no significant advantage to having a special signal for this purpose.\r\n\r\nAs for this being cheap, I think that you underestimate the costs involved.  Though it seems simple, I don't think that it really is that easy.  Because there is no immediate effect from compliance, there is no reason for the resource to be actively validated.  And no matter how small a resource is, correctly serving it requires a non-trivial work in most organizations.\r\n\r\nOverall, my view is that a smaller target is better.  That means cutting back on anything that is not very strongly motivated and this is the most complicated piece of the specification.  Well, outside of the essential part where a technical mechanism engages with any number of legal/regulatory mechanisms.",
      "user": "martinthomson",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "administrative",
      "reason": "The commenter raises concerns about the practicality and cost-effectiveness of implementing such a system in general organizations, rather than focusing solely on the legal aspects. They also question the usefulness of having a dedicated signal for compliance, suggesting that other mechanisms could be sufficient to achieve this goal. This is more of an operational concern within an organization rather than a theoretical or philosophical discussion about the nature of the system itself."
    },
    {
      "id": 1344817961,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/33",
      "created_at": "2022-12-09T21:56:41Z",
      "updated_at": "2022-12-09T21:56:41Z",
      "body": "> Unlikely most other browser features, a site supporting GPC won't have any immediate, user (or browser) noticeable effects. This is very different than almost every other browser feature\r\n\r\nIn my view this is an important point. We did GPC usability studies (to appear in PETS next year), and some of the feedback we received from people was that they were unsure whether turning on GPC actually did anything. If there is at least a declaration on a site that it respects GPC, it could be picked up in a browser or other user agent and trigger a UI event.\r\n\r\nAlso, there is evidence that some operators find it useful: [6,093 sites](https://well-known.dev/?q=resource%3A%22gpc%22#results) sites use the resource; [5,869 sites](https://well-known.dev/?q=resource%3A%22gpc%22+gpc_support%3Atrue#results) set it to `true`. Other operators may decide to not use it. That is OK. It is voluntary (personally, I would actually favor the resource to be mandatory).\r\n\r\n> What I really want to hear is that there is some legally-relevant reason for making a commitment ...\r\n\r\nImplementing the resource and setting it to `true` is a declaration that a site respects GPC. That makes life for regulators a bit easier. If a site does not respect GPC contrary to its declaration, there is a clear compliance issue.\r\n\r\n> Many sites have privacy policies that could adopt common language about compliance with GPC. \r\n\r\nThat is true. Respecting GPC could also be written in the privacy policy of a site. But since there is no common language, it would be much harder to automate and scale GPC compliance (declaration) analysis. ",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides technical suggestions for implementing Google Page Speed (GPC) and is focused on the implementation details of respecting GPC in a site's declaration, rather than discussing its usability or use cases. The tone is constructive and aimed at improving browser behavior based on user declarations."
    },
    {
      "id": 1348889772,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/40",
      "created_at": "2022-12-13T16:03:10Z",
      "updated_at": "2022-12-13T16:03:10Z",
      "body": "I am closing this issue as resolved. If there is more need for discussion, feel free to reopen.",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "administrative",
      "reason": "The comment appears to be an administrative action (closing the issue), providing instructions on how to handle future requests or discussions related to the same issue, and setting a clear expectation for communication. It does not provide technical feedback, use case information, feature requests, conclusions/resolutions, philosophical insights, or any additional context that would classify it as one of those categories."
    },
    {
      "id": 1348943810,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/40",
      "created_at": "2022-12-13T16:16:35Z",
      "updated_at": "2022-12-13T16:16:35Z",
      "body": "the browser header is not the only place the gpc is communicated; the IAB Techlab has incorporated it into server to server open rtb headers. ",
      "user": "patmmccann",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides information about an issue that can be resolved by a technical fix, such as updating software or installing new components, rather than requiring additional context or explanation."
    },
    {
      "id": 1353602023,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/34",
      "created_at": "2022-12-15T19:27:10Z",
      "updated_at": "2022-12-15T19:27:10Z",
      "body": "(None of this is legal advice, just my personal understanding. Ask Mozilla counsel before acting on any of this, etc.)\r\n\r\nI think it depends on what you mean by obligations on the browser. I don't believe that the browser incurs any legal obligation from GPC in any jurisdiction that I'm aware of. A browser that wishes to make GPC legally effective _may_ in some jurisdictions need to do more than just send the header. However, in every existing jurisdiction that I am aware of, I believe that turning on Private Browsing would be more than enough to meet even a pessimistic interpretation of the law.\r\n\r\nI agree with you that there is a risk that privacy labour could be transferred to people, however I believe that it can be minimised. Again, check with counsel but I believe that at worst showing a \"Do you want to sell your data?\" prompt at first launch ought to be sufficient. ",
      "user": "darobin",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "use_case",
      "reason": "The comment discusses the browser's obligations in relation to Google Play Console (GPC) and privacy policies, exploring whether the browser can legally fulfill these requirements by simply turning on Private Browsing. It also touches upon the idea of privacy labor being transferred to users and how it might be minimized through user interface design changes."
    },
    {
      "id": 1353617665,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/35",
      "created_at": "2022-12-15T19:41:43Z",
      "updated_at": "2022-12-15T19:41:43Z",
      "body": "Just for context: the `MAY` there comes from the fact that this spec shouldn't be defining legal requirements. It's not just in the absence of legal requirements: we are explicitly stating that you may do whatever you want, including breaking the law. It's a pretty safe bet that that comes with consequences, but those consequences will hold not because of anything the spec says.\r\n\r\nI personally don't have a preference either way on this one; I'm just flagging that this is there because people keep saying \"but you can't set law.\" We don't need to.\r\n\r\nThe `SHOULD` is because browser folks tend to be quite fussy about UI requirements. Also, `MUST strive to \u2026 best believes` is really a SHOULD in disguise. (Candidate addition to RFC6919 I guess.) I agree with @j-br0 that `SHOULD` reflects the fuzziness and leeway that really is there. Again, I'm not married to this specific formulation, but I would be _very_ reluctant to add a `MUST` that I don't know how to write a test for.",
      "user": "darobin",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment provides detailed and constructive feedback on the proposed specification, discussing its implications, potential issues, and suggested alternatives. It offers practical advice on when to use \"SHOULD\" instead of \"MUST\", which is characteristic of technical feedback."
    },
    {
      "id": 1353641131,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/33",
      "created_at": "2022-12-15T20:02:55Z",
      "updated_at": "2022-12-15T20:02:55Z",
      "body": "We've had this debate multiple times. The one and only value that I see is that regulators can use it as a deceptive declaration if someone has it set to `true` but does not abide. None of the other reasons stick (eg. browsers are never going to surface that in the UI.)\r\n\r\nAs I've said before, I don't think that it accomplishes anything that a standard statement in the PP wouldn't perform almost equally well, it adds complexity and the odds that things will go out of sync (no legal team can manage a `.well-know` which means that they'll need a process to update it when they change anything GPC-related, which they won't), and it keeps purely client-side implementations from existing (and those are the norm in CMP-land).\r\n\r\nI certainly could live without it; it could also be put in a separate spec to live on its own merits.",
      "user": "darobin",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment provides specific criticisms of using this particular feature, pointing out limitations and potential drawbacks (complexity, legal considerations, client-side implementation), which suggests that the author is offering constructive criticism rather than advocating for a new idea or proposing an alternative."
    },
    {
      "id": 1353661646,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/6",
      "created_at": "2022-12-15T20:20:46Z",
      "updated_at": "2022-12-15T20:20:46Z",
      "body": "Concerning repetition, the registration for the header has it as non-repeatable. (I assume that this will make no difference in most implementations, but just flagging for the few cases in which it'll help.)\r\n\r\nConcerning extensibility, when I started working on this I went and grabbed every server-side DNT processor I could find. (It wasn't that many, so I'm not claiming any kind of statistical relevance here, just directional indication.) For reference, DNT can be `0` or `1`, followed by extension data. I mostly found implementations testing for strict equality with `1`. Yes, that fails with repeated headers (a corner case I would think) but it fails with extensions \u2014 meaning that extensions wouldn't work and possibly couldn't be deployed. We could reach out to GPC server-side implementers, but that's a lot of people.\r\n\r\nConcerning `?1`, I have some pretty strong misgivings about changing the syntax of an active compliance method in a way that would render sites non-compliant overnight.",
      "user": "darobin",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "The commenter is suggesting significant changes to the DNT (Don't Track) specification, specifically proposing the use of `?1` as a special case for extensions, which could potentially make it impossible for compliant servers to detect. This raises concerns about the stability and security implications of such a change."
    },
    {
      "id": 1354033552,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/6",
      "created_at": "2022-12-16T01:06:30Z",
      "updated_at": "2022-12-16T01:06:30Z",
      "body": "This issue was raised in 2020; AIUI there's been enough pre-standards deployment to make what would have been a reasonable change then unwise now.\r\n\r\nWhat I'd suggest is that if SF is going to be used, a new field name be defined. You might only consider that if other breaking changes are made -- syntactically or semantically.",
      "user": "mnot",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "philosophical",
      "reason": "The comment provides an analysis of the current situation and proposes a change in approach (defining a new field name). However, it does not offer any concrete suggestions for how to implement this change or what benefits it would bring. Instead, it discusses potential implications and limitations."
    },
    {
      "id": 1356459770,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/34",
      "created_at": "2022-12-17T20:32:26Z",
      "updated_at": "2022-12-17T20:32:26Z",
      "body": "> showing a \"Do you want to sell your data?\" prompt\r\n\r\nA bit of an aside, we tested a UI mockup in an [upcoming PETS paper](https://sebastianzimmeck.de/zimmeckEtAlGPC2023.pdf) to get a sense of whether people understand GPC (81%) and how many would turn it on (94%). Here is the UI we tested (and [some more intricate UI tests](https://github.com/privacy-tech-lab/gpc-privacy-choice#2-privacy-choice-schemes) are in progress ...):\r\n\r\n<img src=\"https://user-images.githubusercontent.com/11034003/208264708-eacc9f54-8b9a-43b3-a422-faed49961890.jpg\" data-canonical-src=\"https://user-images.githubusercontent.com/11034003/208264708-eacc9f54-8b9a-43b3-a422-faed49961890.jpg\" width=\"200\" height=\"400\" />\r\n",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment provides feedback on the presentation of a UI mockup, specifically a prompt asking whether users want to sell their data. This is a technical issue that requires technical expertise and would be classified as a \"Technical Feedback\" response."
    },
    {
      "id": 1360363994,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/42",
      "created_at": "2022-12-20T21:43:56Z",
      "updated_at": "2022-12-20T21:43:56Z",
      "body": "@mnot I think that means it does make sense to have specific date string formats inline then?",
      "user": "AramZS",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "The comment appears to be requesting a feature where the format of date strings is explicitly defined within the application, making it more user-friendly and consistent."
    },
    {
      "id": 1360562275,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/42",
      "created_at": "2022-12-21T00:30:16Z",
      "updated_at": "2022-12-21T00:30:16Z",
      "body": "Yes, but it should be defined in 3339 terms.",
      "user": "mnot",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment is providing an opinion or suggestion on how something could be improved, specifically that the suggested definition of the term should be more detailed. The tone is informal and conversational, suggesting a discussion rather than a formal request for clarification."
    },
    {
      "id": 1372473925,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/6",
      "created_at": "2023-01-05T16:55:15Z",
      "updated_at": "2023-01-05T16:55:15Z",
      "body": "> This issue was raised in 2020; AIUI there's been enough pre-standards deployment to make what would have been a reasonable change then unwise now.\r\n\r\nIndeed, but there was a total a lack of implementer interest at the time. Also, the fact that @hober would get it wrong made me think that it couldn't be mature tech :)\r\n\r\nCould this be a candidate for retrofitting?",
      "user": "darobin",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "The comment expresses dissatisfaction with the current state of pre-standard deployment and suggests that the change could potentially be retrofitted to improve maturity, but does not specifically mention implementation details or potential technical requirements."
    },
    {
      "id": 1372932319,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/6",
      "created_at": "2023-01-05T23:38:20Z",
      "updated_at": "2023-01-05T23:38:20Z",
      "body": "> Could this be a candidate for retrofitting?\r\n\r\nIt's not syntactically a SF, so it'd need to be mapped. That's basically just creating a new header with the same semantics but different syntax.",
      "user": "mnot",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "The comment suggests that the code is not syntactically compatible with Sphinx (SF), which implies that it may require modification or reconfiguration to work seamlessly with SF, indicating a potential feature request."
    },
    {
      "id": 1382919519,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/45",
      "created_at": "2023-01-14T21:12:12Z",
      "updated_at": "2023-01-14T21:12:12Z",
      "body": "Thank you, @martinthomson! This PR resolves issue #44. ",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment provides feedback on an existing code change or release. It specifically mentions the number of the issue being resolved and the author's username (@martinthomson), indicating that it is a technical update or improvement rather than a discussion, request, administrative action, conclusion/resolution, philosophical point, or unknown category."
    },
    {
      "id": 1397480046,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/42",
      "created_at": "2023-01-19T19:14:01Z",
      "updated_at": "2023-01-19T19:14:01Z",
      "body": "@mnot We can remove the generic examples or make them actual examples but the text does specify \r\n\r\n```html\r\n<code>full-date</code> (YYYY-MM-DD) or <code>date-time</code> (YYYY-MM-DDTHH:mm:ss.sssZ)\r\n```\r\n\r\n`full-date` and `date-time` are the RFC 3339 correctly referenced right?",
      "user": "AramZS",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment is providing a technical point of clarification regarding two specific RFC references, specifically whether \"full-date\" (YYYY-MM-DD) or \"date-time\" (YYYY-MM-DDTHH:mm:ss.sssZ) are indeed the correct formats as referenced in RFC 3339."
    },
    {
      "id": 1399643983,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/42",
      "created_at": "2023-01-22T23:46:57Z",
      "updated_at": "2023-01-22T23:46:57Z",
      "body": "That works. I see the current spec says:\r\n\r\n> The value of the lastUpdate member MUST be an RFC3339 full-date (YYYY-MM-DD) or date-time (YYYY-MM-DDTHH:MM:SS(?:0+)?TZ) [[RFC3339](https://privacycg.github.io/gpc-spec/#bib-rfc3339)]\r\n\r\nJust a note - many formats constrain the `TZ` to `Z` for simplicity, since there are so many ways to notate timezone.\r\n\r\n",
      "user": "mnot",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "The comment requests an update to the specification regarding the formatting and notation of timezones in RFC3339, indicating a need for additional clarity or consistency in this area."
    },
    {
      "id": 1409092746,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/47",
      "created_at": "2023-01-30T18:13:50Z",
      "updated_at": "2023-01-30T18:13:50Z",
      "body": "Thank you, @tidoust! ",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides feedback on something specific to someone (in this case, Tidoust), indicating that the intent is practical and operational."
    },
    {
      "id": 1409175257,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/47",
      "created_at": "2023-01-30T19:05:51Z",
      "updated_at": "2023-01-30T19:05:51Z",
      "body": "Did you mean to hit the merge button instead of the close one? Or should I read your comment as \"Thank you but no\"? ;)",
      "user": "tidoust",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "use_case",
      "reason": "This comment provides feedback on user interaction (the \"merge\" and \"close\" buttons), which is a key aspect of a use case. It also indicates the intent behind the original message, indicating that it was intended to be closed rather than merged."
    },
    {
      "id": 1409210928,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/47",
      "created_at": "2023-01-30T19:24:32Z",
      "updated_at": "2023-01-30T19:24:32Z",
      "body": "Yes, sorry, @tidoust! I wanted to merge, of course! :) ",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment is expressing a technical issue or concern (the intention to merge something) and providing an acknowledgement. It does not relate to the use case, feature request, administrative aspects, conclusion/resolution, philosophical discussions, or the status of something unknown."
    },
    {
      "id": 1424268314,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/33",
      "created_at": "2023-02-09T14:22:50Z",
      "updated_at": "2023-02-09T14:22:50Z",
      "body": "@braedon, FYI, we plan to discuss this issue in the February 23 PrivacyCG call. ",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "administrative",
      "reason": "The comment is related to scheduling a meeting or discussing an ongoing topic in advance, rather than providing feedback on code quality, requesting new functionality, or exploring philosophical ideas. It also appears to be a reminder from someone who may not have direct involvement in the project, such as a team lead or manager."
    },
    {
      "id": 1424302797,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/33",
      "created_at": "2023-02-09T14:44:45Z",
      "updated_at": "2023-02-09T14:44:45Z",
      "body": "@SebastianZimmeck Thanks, is that going to be in the Noon or 7pm EST timeslot?",
      "user": "braedon",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "administrative",
      "reason": "This message appears to be a query from an individual seeking information about the scheduling of a time slot (Noon and 7pm EST) for which they are requesting confirmation, likely in relation to a meeting or appointment."
    },
    {
      "id": 1424314126,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/33",
      "created_at": "2023-02-09T14:52:28Z",
      "updated_at": "2023-02-09T14:52:28Z",
      "body": "@braedon, this would be at noon EST. ",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment is providing technical information or data about the time zone (noon EST), which suggests it's a piece of feedback related to how to interpret or understand that information."
    },
    {
      "id": 1426684841,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/33",
      "created_at": "2023-02-11T10:10:36Z",
      "updated_at": "2023-02-11T10:10:36Z",
      "body": "I'm unlikely to make the call unfortunately - that's 1am for me. A few notes:\r\n\r\nFor tracking adoption, the well-known resource is MASSIVELY superior to a statement in the PP, even standardized. I originally threw together gpcsup.com in a few hours - it'd simply not have been feasible to build if I had to find and parse privacy policies. This use case isn't critical, but I think it has value.\r\n\r\nSimilarly, surfacing support status to users in the browser would be reliant on the resource to be practical. I disagree with Robin here - IMO once there's decent adoption browsers should surface it so users can make informed browsing decisions (and if they don't, it should be feasible for extensions to).\r\n\r\nI'm also not sure why sites would need to update it whenever they change \"anything GPC-related\" - or rather I'm not sure what changes would require an update to the resource and be frequent enough to cause an issue? I'd hope sites aren't changing whether they support GPC more than once or twice on average, and as I understand it, the `lastUpdate` field should at max only need to be updated if/when the spec is updated?\r\n\r\nOverall, I don't have particularly strong feelings, but would lean to keep it since it's already there, and IMO it's useful even if it's not essential.",
      "user": "braedon",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides detailed feedback about a technical aspect of GPC adoption tracking, specifically the usefulness and practicality of a certain resource. It addresses potential issues or concerns with the information provided, such as its relevance, frequency of updates, and consistency with the official specification."
    },
    {
      "id": 1426685178,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/33",
      "created_at": "2023-02-11T10:12:27Z",
      "updated_at": "2023-02-11T10:12:27Z",
      "body": "(If anyone has any questions on adoption I'm seeing, or anything like that, let me know.)",
      "user": "braedon",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "use_case",
      "reason": "The comment appears to be asking for clarification or information regarding the adoption process and seems to be directed towards users who may have questions about how to use the system."
    },
    {
      "id": 1441213257,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/48",
      "created_at": "2023-02-23T04:46:02Z",
      "updated_at": "2023-02-23T04:46:02Z",
      "body": "As the spec stands, the well-known resource *is* intended to describe what the site does for all users (where a relevant privacy law has jurisdiction).\r\n\r\nI can't speak to what the authors intended, but that's how it reads to me, to everyone I've talked to about it, and how it's treated in every implementation I've come across.\r\n\r\nWithout getting into what the semantics of the resource *should* be, I don't think we should fundamentally change the meaning of an existing resource/field at this stage.",
      "user": "braedon",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides a detailed explanation and critique of the specification, suggesting changes that could improve clarity or consistency. It does not appear to request new information or propose additional features, but rather critiques aspects of how the resource is currently being described."
    },
    {
      "id": 1442292664,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/42",
      "created_at": "2023-02-23T19:06:54Z",
      "updated_at": "2023-02-23T19:06:54Z",
      "body": "Looks like we've got it right in this change then! ",
      "user": "AramZS",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "use_case",
      "reason": "The comment appears to be related to a specific issue or resolution within a software system, rather than providing feedback on technical issues (which would typically be classified as Technical Feedback) or requesting new features. It also does not appear to be an administrative comment or a philosophical discussion, nor is it an unknown type of content."
    },
    {
      "id": 1442527181,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/33",
      "created_at": "2023-02-23T22:42:45Z",
      "updated_at": "2023-02-23T23:11:50Z",
      "body": "So we did discuss this issue at length on the PrivacyCG call today (notes [here](https://docs.google.com/document/d/1DZEhS1UHJ1PKxt5ZwKmn5LZ4bo10UFyNXeLp2dUuzRM/edit#heading=h.dm21kstbhcht)). In general, the discussion tracked the commentary in the thread. The biggest point of agreement was that maintenance of a `well-known` should not be mandatory largely because of the impact on small publishers (it is currently [optional](https://privacycg.github.io/gpc-spec/#gpc-support-resource) in the spec). Otherwise, while there was mild disagreement over the value of the signal, no one seemed to think that the optional resource should be a barrier to going forward with this process. For this reason, the editors indicated on the call that we are likely to close the issue next week --- however, if folks who were not on the call feel more strongly and/or believe that inclusion of an optional `well-known` in the spec would be a barrier to moving forward, please speak up and we can continue to discuss.\r\n\r\nRelatedly, we also discussed whether the optional `well-known` resource should be revised to provide more detailed information about site compliance. Right now the [spec](https://privacycg.github.io/gpc-spec/#gpc-support-representation) only includes a `gpc` field which returns as `true` or `false`, and a `lastUpdated` field to indicate the time the statement of support was made. Seperately, @pes10k has filed PR #48 to propose to clarify that the resource should indicate whether a site respects GPC with respect to _the specific user_ accessing the resource. We also briefly discussed whether a static resource could provide more specificity as to in which jurisdictions GPC is honored, and whether the `lastUpdated` field still provides any value. Assuming we move forward with inclusion of the optional resource, we intend to continue to discuss those options.",
      "user": "j-br0",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment describes specific technical details about the implementation of a proposed specification or process, including discussions about its compliance and potential changes, which are typically classified as technical feedback. The tone is neutral and informative, with no apparent persuasive intent."
    },
    {
      "id": 1444028418,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/48",
      "created_at": "2023-02-24T17:00:55Z",
      "updated_at": "2023-02-24T17:00:55Z",
      "body": "I think the current text is somewhat ambiguous. It says: \"The purpose of a GPC Support Resource is for a site to convey its support for the Global Privacy Control.\" I think this could be read to mean either its support for GPC for this particular user or more broadly.\r\n\r\nRight now, the `well-known` field only allows the site to respond with `gpc` as `true` or `false`. If it is a static resource that returns the same result for all users, it's not entirely clear what `true` means. Does it mean that it honors GPC for all users around the world, that it honors GPC in jurisdictions where it's explicitly required, or something else? And separately, there's a question of _how_ it honors GPC: does it stop third-party sharing entirely, just turn off certain advertising pixels, or does it . . . change the default font size.\r\n\r\nPete's PR would address the first question --- the `well-known` provided to a user would tell whether that user's GPC signals are being honored (though it still wouldn't provide information how). Others should speak to the technical challenges with such a dynamic approach, but it would certainly provide more granular and robust data about GPC compliance.\r\n\r\nAlternatively, we could devise a static resource to provide more detail about the jurisdictions in which it supports GPC instead of the binary result returned today. Presumably companies are honoring GPC is jurisdictions where they are clearly legally required to do so, but the `well-known` could signal when companies are honoring in additional jurisdictions (including jurisdictions where it is unclear what legal effect GPC has).\r\n\r\nLeast ambitiously, we could just revise the spec to clarify (1) that the resource is static and (2) what `true` means.\r\n\r\nI think we should at least do that last bit for clarity's sake. In general, I am leery about introducing major substantive changes to the spec given that it is widely implemented and has legal consequences in some jurisdictions, but I think we can be more flexible with regard to the optional `well-known` (and the `lastUpdated` field would signal whether the company was providing data pursuant to the `well-known`'s original parameters or in a newer format).",
      "user": "j-br0",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "philosophical",
      "reason": "The comment is a philosophical discussion about the design of an API, specifically the ambiguity and vagueness of the \"GPC Support Resource\" field. It raises questions about what it means to honor GPC (Global Privacy Control) for all users or just in certain jurisdictions, and whether this should be communicated more explicitly in the spec. The comment is not providing technical feedback or a feature request, but rather exploring the implications and nuances of the API's design."
    },
    {
      "id": 1444330993,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/48",
      "created_at": "2023-02-24T19:35:39Z",
      "updated_at": "2023-02-24T19:35:39Z",
      "body": "If servers applied different rules to different users then it would have to examine request headers (e.g. cookies) or the user's source IP,  either of which possibly being personal data. This would not look good in a privacy motivated spec.\r\nHowever a machine readable declaration of a servers intent to honour a users right to privacy is a good concept, and if jurisdiction specific information would help then this could be conveyed via additional properties in the .well-known resource.",
      "user": "michael-oneill",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides feedback on a technical aspect of a specification or implementation (servers applying different rules based on user identity), suggesting an improvement to handle privacy concerns. The tone is informative and problem-focused, indicating that this comment is intended for the authors or implementers of the specification to consider in their development process."
    },
    {
      "id": 1444599689,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/48",
      "created_at": "2023-02-24T22:29:17Z",
      "updated_at": "2023-02-24T22:29:17Z",
      "body": "> As the spec stands, the well-known resource is intended to describe what the site does for all users (where a relevant privacy law has jurisdiction).\r\n\r\nAgreed with @braedon. That is also how I read it. It is the flip side of the spec. The spec intentionally does not define what legal meaning GPC has. Rather, its meaning is determined by the law the site operator is subject to. Similarly, with the .well-known resource the site operator declares \"I am respecting GPC to the extent I am required to under the laws applicable to me.\" (The operator can also go beyond the law and apply GPC where it is not required.)\r\n\r\n> I think we should at least do that last bit for clarity's sake. \r\n\r\nAlso agreed with @j-br0. If it is not clear, we should clarify the meaning.",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides feedback on a technical issue related to the interpretation of a specification, specifically regarding the intended meaning and application of certain terms and concepts."
    },
    {
      "id": 1451102630,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/48",
      "created_at": "2023-03-02T00:43:43Z",
      "updated_at": "2023-03-02T00:43:43Z",
      "body": "If it'd help to define the concept \"current session\" as its used in the proposal, im happy to do so. But if whats being asked for is to define a technical, machine enforceable concept for what counts as the \"current session\", i do not think thats necessary or w/in the scope of this spec. Whats meant by \"session\" for \"session cookies\" is similarly ambiguous and left up to the [browser implementors](https://datatracker.ietf.org/doc/html/rfc6265#section-4.1.2) and sites (e.g., \"your session has ended, please log in again\") to work out.\r\n\r\nI'm not saying it wouldn't be useful to the platform to have such a definition, im only saying i. this proposal isn't the only place that references the concept of a session without providing a complete definition of it, and ii. i dont think this spec needs to be clearer than other parts of the platform for it to still be useful.\r\n\r\nI think we need something like this though, and to make it clear that .well-known doesn't describe a site wide policy.  Even if we extended the .well-known to include additional information, like \"these are the jurisdictions or regions or laws I respect GPC under\", it still wouldn't be sufficient to answer the main (to my mind) question of \"if I interact with the site now, will the site respect my GPC-relevant rights.\"\r\n\r\nFor example, if we go the other direction, and have the .well-known describe the site's policy. We could go even further and \r\nextend the .well-known to  say \"I respect CCPA\" or something like that. But that doesn't tell the user (who may be connected through Tor, or a VPN, or living in California but on vacation in Chicago, or vise versa) if the site thinks the user is entitled to, and so the site will follow, CCPA when the user interacts with the site.\r\n\r\nLast note, like i mentioned on the calls, this isn't a core thing to me; I think the proposal would be more useful if there was a way for the site to signal back to the user what GPC-relevant rights the site is respecting in regards to the user, and so i think that requires a change at least similar to this PR. But, i think GPC would still be useful w/o that, and so having a .well-known isn't a hill I want to die on.\r\n\r\nBut, i don't think \".well-know describes the site, not the site+user interaction\" is useful for anything other than a public statement of \"GPC is good\", and I think we could do that w/o the .well-known.\r\n\r\nTL;DR; my pref is: \"`.well-known` describes the session\" > nothing > \"`.well-known` describes the site\r\n",
      "user": "pes10k",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides technical feedback on the proposal, specifically addressing potential ambiguities and unclear definitions. It also expresses the author's perspective on what constitutes a well-known definition of \"current session\". The tone is constructive and detailed, but does not explicitly request changes or clarification beyond its current status as an unknown item in this spec."
    },
    {
      "id": 1477963541,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/49",
      "created_at": "2023-03-21T14:41:36Z",
      "updated_at": "2023-03-21T14:41:36Z",
      "body": "@SebastianZimmeck (or other person with permission) can you add the agenda+ tag so this is discussed thursday?",
      "user": "arichiv",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "administrative",
      "reason": "The comment appears to be related to an administrative task, specifically asking someone to add a specific label (\"agenda+\") to a discussion thread. This is a common request in online forums and platforms, and the tone of the comment suggests that it's not particularly technical or philosophical in nature."
    },
    {
      "id": 1478906243,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/49",
      "created_at": "2023-03-22T04:33:53Z",
      "updated_at": "2023-03-22T04:33:53Z",
      "body": "It is a good point, @arichiv! It looks like we won't be able to get to it this week. But we will surely do it in one of the next meetings ... (at which point I will put the agenda+ label on). ",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "administrative",
      "reason": "The comment is a reminder about an upcoming meeting and a possible task or action that will be taken at that time, indicating that it's not related to technical feedback, use cases, features, conclusions/ resolutions, philosophical discussions, or unknown purposes."
    },
    {
      "id": 1483151172,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/49",
      "created_at": "2023-03-24T17:16:24Z",
      "updated_at": "2023-03-24T17:16:24Z",
      "body": "Preference changes in the middle of loading a page don't seem common or need well-defined behavior (although I'm curious if any other specs do define that), but changing preferences after a page is loaded will certainly happen (because people keep pages open for long periods of time, and preferences do get changed, not just at startup time).\r\n\r\nPerhaps there could be simpler text to say: if the user changes their preference after a page is loaded, UAs could  reload the page or reflect the preference (in sub-http requests and the javascript property) only on subsequent page loads.",
      "user": "npdoty",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "The comment suggests that changing preferences after loading a page might be more convenient for users, and proposes a possible solution of reloading the page or reflecting the preference in subsequent page loads. This indicates a user-centric suggestion rather than purely technical feedback, administrative advice, philosophical ramblings, or unknown comments."
    },
    {
      "id": 1485062917,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/49",
      "created_at": "2023-03-27T12:51:13Z",
      "updated_at": "2023-03-27T12:51:13Z",
      "body": "It's true this isn't reflected in other specs, including the DNT spec itself: \"Ideally, the value of Navigator.doNotTrack ought to reflect the current set of user-granted exceptions in effect when the attribute is read.\" https://www.w3.org/TR/tracking-dnt/#expressing\r\n\r\nI think it's worth requiring locked consistency within a given navigation for all subresources and subframes as that seems the most correct/consistent approach and this spec is still being incubated, but I'd also be fine with unifying HTTP/JavaScript approaches the other direction and always using the 'live' value of the preference if that's what you're saying.",
      "user": "arichiv",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides specific suggestions for improving or clarifying a technical specification (the DNT spec), which is intended to inform or improve the quality of the specification itself. It offers alternative solutions and reasoning behind these suggestions, rather than addressing a use case, feature request, administrative issue, conclusion, philosophical discussion, or unknown aspect."
    },
    {
      "id": 1485129752,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/49",
      "created_at": "2023-03-27T13:47:06Z",
      "updated_at": "2023-03-27T14:41:05Z",
      "body": "It's true this isn't reflected in other specs, including the DNT spec itself: \"Ideally, the value of Navigator.doNotTrack ought to reflect the current set of user-granted exceptions in effect when the attribute is read.\" https://www.w3.org/TR/tracking-dnt/#expressing\r\n\r\nI think it's worth requiring locked consistency within a given navigation for all subresources and subframes as that seems the most correct/consistent approach and this spec is still being incubated, but I'd also be fine with unifying HTTP/JavaScript approaches the other direction and always using the 'live' value of the preference if that's what you're saying.",
      "user": "arichiv",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides technical feedback on a specification related to tracking and Do Not Track (DNT) preferences. It suggests an approach based on existing specifications, such as the DNT spec, which implies it is intended to inform or improve the design of the specification being referenced."
    },
    {
      "id": 1499285724,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/48",
      "created_at": "2023-04-06T15:54:10Z",
      "updated_at": "2023-04-06T18:14:48Z",
      "body": "In a perfect world, I would definitely want the response to be session-specific. My three concerns are:\r\n\r\n(1) It may be technically challenging in some cases (as @AramZS and @dmarti have argued).\r\n(2) As @braedon notes, tens of thousands of sites have already published a `well-known` for GPC assuming a different meaning.\r\n(3) Publishing a `well-known` is voluntary, and I fear sites will not be sufficiently incentivized to provide a session-specific response. In addition to any coding challenges, doing so potentially invites liability if they provide an inadvertently incorrect response, and I am not aware of any user agents that are taking steps to treat publishers differently based on the `well-known` (though that could change if the `well-known` was dynamic).\r\n\r\nI am not sure these three concerns are insurmountable, just noting them. In fact, it would be my preference to surmount them.\r\n\r\nI think I disagree that nothing > a static `well-known` however. While honoring GPC is mandatory in California and Bermuda (and possibly other jurisdictions), I think there is still some lack of awareness and/or compliance with GPC. At IAPP yesterday on the CA regulators' panel, the speakers noted that compliance with CCPA more broadly was very inconsistent. Allowing publishers to express _any_ recognition of GPC is still valuable and provides data to researchers and regulators; the trend lines detected by the GPC Support Bot which crawls `well-knowns` have been useful.\r\n\r\nSo I would still support a static resource over nothing. But if we go that route we should revise the spec to clarify whether `true` means:\r\n\r\n(1) \"I do something, somewhere in response to GPC\"\r\n(2) \"I do something, everywhere in response to GPC\" (but I think this would be a significant change from how many companies are interpreting this today)\r\n(3) \"I do something in response to GPC in the places where I am legally required to\"\r\n(3b) \"I do something in response to GPC _at least_ in the places where I am legally required to\"\r\n(4) \"I do something in response to GPC in these jurisdictions\" (and we provide guidance on how to list them out), or\r\n(5) something else\r\n\r\n(also, to be clear, as with @pes10k, none of this is a hill I am willing to die on)",
      "user": "j-br0",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "administrative",
      "reason": "The comment primarily discusses technical concerns related to using the `well-known` for GPCC compliance in different jurisdictions and proposes revisions to the specification to clarify its meaning. While there are also philosophical comments about why publishing session-specific responses is a good idea, this aspect of the comment is more focused on clarifying the meaning and implications rather than raising philosophical questions. The tone remains neutral and informative throughout, making it an administrative comment."
    },
    {
      "id": 1499472949,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/48",
      "created_at": "2023-04-06T18:42:43Z",
      "updated_at": "2023-04-06T18:42:43Z",
      "body": "It would be very helpful to include information on consent-exempt storage aka \"strictly necessary\" cookies etc.\r\nIn Europe a website does not require consent for particular kinds of storage such as those that are \"strictly necessary for the provision of an information society service requested by the subscriber or user\" (ICO guidance).\r\nThe GPC signal is a No-Op in Europe (because ePrivacy already establishes default opted-out) but incorporating the ability to declare autonomy relevent information in a machine-readable way could make it _de rigueur_",
      "user": "michael-oneill",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "use_case",
      "reason": "The comment discusses the inclusion of consent-exempt storage and other technical aspects related to cookies, which are relevant to the technical functionality and user experience of a website. It seems to be providing feedback or suggestions on how to improve the technical implementation of a particular feature (cookies) in a European context."
    },
    {
      "id": 1500669099,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/48",
      "created_at": "2023-04-07T21:43:45Z",
      "updated_at": "2023-04-07T21:43:45Z",
      "body": "Is there a reason not to have two fields? I don't think that JSON is running out. Like:\r\n- `gpc: true`: this site intends to honour GPC requests as applicable.\r\n- `requestGPCState`: is `true` if the _current request_ would honour a GPC signal that if set, `false` if it wouldn't, and undefined if it's not saying. (Let's not talk about sessions, only lawyers think that those exist.)\r\n\r\nSide note: @michael-oneill GPC is entirely unrelated to cookies, by design. It's not that it's a no-op, it's that it deliberately targets the sale of data, not cookies considerations. The spec states so.",
      "user": "darobin",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides technical feedback on how to use the `gpc` field in a JSON object, specifically clarifying its purpose and behavior within this context. It addresses potential confusion or misuse and offers guidance for implementing the feature correctly."
    },
    {
      "id": 1500866278,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/48",
      "created_at": "2023-04-08T10:56:32Z",
      "updated_at": "2023-04-08T10:56:32Z",
      "body": "> Side note: @michael-oneill GPC is entirely unrelated to cookies, by design. It's not that it's a no-op, it's that it deliberately targets the sale of data, not cookies considerations. The spec states so.\r\n\r\nExactly. The header signal is a no-op in Europe because it has no legal meaning there.\r\n\r\nFYI ePrivacy is not about \"cookies\" either, it is about tracking, or recognising an individual across multiple web interactions by utilising data stored in their UA. The \"cookie law\" ephthet was given it by the tracking lobby.\r\n\r\nI was referring to extending the well-known resource - which could give the recomendation some point in Europe, where there is a need for a machine-readable way for sites to declare storage claimed to be exempt from the prior consent requirement.\r\n\r\n\r\n",
      "user": "michael-oneill",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides feedback and insights about the specification or technical aspect of cookies (GPC) in the context of data protection laws, specifically highlighting differences between European regulations regarding cookie considerations and the header signal."
    },
    {
      "id": 1500959664,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/48",
      "created_at": "2023-04-08T19:17:32Z",
      "updated_at": "2023-04-08T19:17:32Z",
      "body": "> Is there a reason not to have two fields? I don't think that JSON is running out. Like:\r\n\r\n\"I dont think that JSON is running out\" is a very funny phrase :)\r\n\r\nI'm all for this idea @darobin! A+, way to cut the knot!\r\n\r\nIf no one disagrees by EOD Monday, i'll update the PR accordingly ",
      "user": "pes10k",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides constructive criticism and suggestions regarding a technical aspect of using JSON. It expresses concern about running out of space in certain situations (e.g., storing large amounts of data), but frames it as a minor issue rather than a critical one, with the author offering an alternative solution by suggesting two fields instead."
    },
    {
      "id": 1500961354,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/48",
      "created_at": "2023-04-08T19:27:37Z",
      "updated_at": "2023-04-08T19:27:37Z",
      "body": "one small note though, i think session is better than request here, bc its not useful to know if GPC is being respected for the request for the `.well-known`; what the user cares about is if GPC is respected for _every other_ request to the site.\r\n\r\nI appreciate that session is a not-100%-well-defined term on the platform, but i dont think that makes \"session\" meaningless (as i mentioned above, session is used similarly in other standards/specs), and it captures the intent better than request.\r\n\r\nThat said, this isn't a hill i want to die on.  If there isn't a path to close/merge this PR with \"session\", but there is for \"request\", I can go along with \"request\"",
      "user": "pes10k",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment provides detailed and constructive feedback about the terminology used in the request, suggesting that 'request' might be more suitable than 'session'. It also mentions a potential solution (closing/merging the PR) for technical issues but does not explicitly state the classification."
    },
    {
      "id": 1501060388,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/48",
      "created_at": "2023-04-09T07:15:09Z",
      "updated_at": "2023-04-11T03:05:54Z",
      "body": "Agree with @pes10k that saying \"GPC is honored for this request\" isn't useful/will be exploited. We'd need to very carefully/explicitly define the scope, and consider how it interacts with the various laws. Seems hard, to put it mildly?\r\n\r\nPersonally, I think that's a lot of effort/complication/risk to add to the spec for something that is hard for most sites to even implement - a dynamic response based on *something* about the user is a very different prospect to a static file.\r\n\r\nThe elegance/simplicity of the existing well-known resource is it is extremely simple to implement, and offloads all that complexity to the relevant law. I don't see a good argument for complicating it currently.\r\n\r\nTrying to report whether the site is honoring GPC for the current user/session/request/whatever seems like something for a response header and/or JS API?",
      "user": "braedon",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The commenter disagrees with the original statement about saying \"GPC is honored for this request\" being useful, suggesting that it may not be exploitable. They also express concerns about adding complexity to the specification, implying that it's unnecessary and potentially complicated."
    },
    {
      "id": 1502133797,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/48",
      "created_at": "2023-04-10T18:09:11Z",
      "updated_at": "2023-04-10T18:09:11Z",
      "body": "I also agree with @pes10k and @braedon. A tricky problem is when GPC must be checked and used by a service provider, in 3rd-party JavaScript that may appear on multiple sites, but the `.well-known` file can only be updated in the CMS for the individual site. This is a common pattern for sites that use service providers that must (or choose to) respect GPC, and makes it hard to keep the resourceand the actual GPC behavior in sync. A site with this fairly common setup would be likely to omit the resource entirely.",
      "user": "dmarti",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "use_case",
      "reason": "This comment is discussing a specific scenario or situation related to using Google Public Service Cache (GPC) in 3rd-party JavaScript applications that may appear on multiple sites, and how it can lead to inconsistencies between different resources. The author is providing feedback on the CMS for individual sites regarding this issue, indicating that their purpose is to provide information about a usability problem."
    },
    {
      "id": 1502140891,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/48",
      "created_at": "2023-04-10T18:15:29Z",
      "updated_at": "2023-04-10T18:15:29Z",
      "body": "Glad you liked it @pes10k :)\r\n\r\nI'm not going to die on this hill either, but note that if your goal is to prevent lawyer from lying then using a somewhat vague term like \"session\" might not be the best idea either. Maybe make it something like \"a request to any other resource on this site with similar parameters\"?",
      "user": "darobin",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "The comment suggests adding a feature or modification to prevent certain types of behavior (lawyers lying) and provides an alternative suggestion for achieving that goal, indicating that it's something the person is requesting."
    },
    {
      "id": 1515167739,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/48",
      "created_at": "2023-04-19T18:14:54Z",
      "updated_at": "2023-04-19T18:14:54Z",
      "body": "> Is there a reason not to have two fields? I don't think that JSON is running out. Like:\r\n> \r\n> * `gpc: true`: this site intends to honour GPC requests as applicable.\r\n> * `requestGPCState`: is `true` if the _current request_ would honour a GPC signal that if set, `false` if it wouldn't, and undefined if it's not saying. (Let's not talk about sessions, only lawyers think that those exist.)\r\n\r\nI could live with two fields, but I suspect in practice few if any will implement the proposed `requestGPCState` field for the reasons discussed in the thread (novel, difficult to implement, potentially induces legal liability). Earlier proposed versions of the CCPA regulations would have required sites to display opt-out state to users, but there is no such mandate today under any law I am aware of. And even if that mandate is reintroduced, I'm not sure the `well-known` is the best mechanism to facilitate compliance.\r\n\r\nCurrently at least 20k sites seem to voluntarily publishing a GPC `well-known`, and the trend lines are useful to both researchers and regulators. Of the options I listed earlier to more narrowly define what a static resource is meant to convey, I would choose to define `gpc: true` as \"this site honors GPC signals at least in the jurisdictions where it is legally required to do so.\" Such a statement would not trigger new liability for site owners which could otherwise deter implementation. While the signal would only be conveying that the sites were compliant with the law, we know today a lot of sites _aren't_ compliant with the law, so the `well-known` would provide some information to the ecosystem about awareness and adoption.",
      "user": "j-br0",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "The commenter is suggesting adding an additional field (`requestGPCState`) to indicate whether a site honors GPC (Generalized Passenger Consent) signals, in order to better facilitate compliance with CCPA regulations. They propose defining `gpc: true` as \"this site honors GPC signals at least in the jurisdictions where it is legally required to do so\", which would provide more specific information about compliance status for sites that are subject to such requirements."
    },
    {
      "id": 1516727406,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/41",
      "created_at": "2023-04-20T17:55:33Z",
      "updated_at": "2023-04-20T17:55:33Z",
      "body": "Reflecting on this discussion, I think this addition is warranted and should be merged in, but I think the spec needs additional information in this section. @martinthomson I'd like to merge this in and invite additional changes on top of that change. ",
      "user": "AramZS",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "The comment expresses a request for the addition of specific information related to the proposed specification, indicating that it requires further development or consideration before being merged into the existing codebase."
    },
    {
      "id": 1516728309,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/41",
      "created_at": "2023-04-20T17:56:23Z",
      "updated_at": "2023-04-20T17:56:23Z",
      "body": "This is a good start, if brief. We may want to add more to the privacy considerations (which can be done later), like noting the privacy benefits of being able to easily exercise privacy rights and express privacy preferences, and that in some cases or jurisdictions the preference may not lead to actual differences in behavior.",
      "user": "npdoty",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "The comment is requesting additional privacy considerations for a specific feature (exercising privacy rights and expressing privacy preferences), suggesting it can be developed later if necessary."
    },
    {
      "id": 1516730034,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/49",
      "created_at": "2023-04-20T17:57:47Z",
      "updated_at": "2023-04-20T17:57:47Z",
      "body": "I think this is worthwhile discussing in the CG. @martinthomson let's add this to the agenda. ",
      "user": "AramZS",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "The comment expresses an opinion or idea about adding something new (a feature) to a product or system, and suggests it be discussed within a specific group (the CG). This indicates that it is not strictly \"Technical Feedback\", \"Administrative\", or \"Conclusion/Resolution\" but rather a proposal or suggestion for improvement."
    },
    {
      "id": 1516731276,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/48",
      "created_at": "2023-04-20T17:58:47Z",
      "updated_at": "2023-04-20T17:58:47Z",
      "body": "I think this warrants additional in-group discussion. I move to take the conversation to our next meeting. ",
      "user": "AramZS",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "administrative",
      "reason": "No reason provided."
    },
    {
      "id": 1516732946,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/6",
      "created_at": "2023-04-20T17:59:57Z",
      "updated_at": "2023-04-20T17:59:57Z",
      "body": "@darobin @mnot What is the feeling here? Should we close and drop or does this need further development? ",
      "user": "AramZS",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides constructive feedback about an existing issue, specifically about whether the code should be closed and dropped or if it needs further development. It's a technical issue that requires consideration to determine its future state."
    },
    {
      "id": 1516741014,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/34",
      "created_at": "2023-04-20T18:05:58Z",
      "updated_at": "2023-04-20T18:05:58Z",
      "body": "I would like to say that this is out of scope for the specification and up to the implementer. Browser vendors / extension developers have a better understanding of their users' intent in private/incognito mode than the spec writers and arguably user intent is not consistent across every browser. Different browsers provide different messaging on activation of clean-state browser modes and the activation of GPC in those modes may make sense based on one browser's messaging but not on another and in some cases it may even make sense to present it as an option on activation of that mode, as @darobin suggests. I do not think we need language in the spec to address this.",
      "user": "AramZS",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "administrative",
      "reason": "The comment is primarily discussing a matter related to browser functionality and user experience, specifically how to handle different browser modes and their respective messaging. It does not provide any technical details about the specification or propose changes to it, but rather suggests a workaround for addressing a potential issue in private/incognito mode."
    },
    {
      "id": 1517055427,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/6",
      "created_at": "2023-04-20T23:26:32Z",
      "updated_at": "2023-04-20T23:26:32Z",
      "body": "My .02 - close this, but keep it in mind if you find that you need to create a new, incompatible version of the header.",
      "user": "mnot",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment is providing constructive criticism or suggestions for improving something (in this case, a programming code). It's giving specific advice on how the feature could be improved."
    },
    {
      "id": 1519420565,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/41",
      "created_at": "2023-04-24T05:52:33Z",
      "updated_at": "2023-04-24T05:52:33Z",
      "body": "I'm just contributing here the same as anyone else, not as a chair.  Editors have discretion in how they manage feedback.  If you think that this is a good start and plan to address comments in future changes, that's good with me.",
      "user": "martinthomson",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "administrative",
      "reason": "This comment does not offer any feedback on the content or quality of the provided text but rather provides guidance for editing and managing user contributions. It discusses the role of editors and their discretion in handling feedback, which falls under administrative purposes."
    },
    {
      "id": 1526013755,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/48",
      "created_at": "2023-04-27T16:40:32Z",
      "updated_at": "2023-04-27T16:40:32Z",
      "body": "Want to add this note to the record: \r\n\r\nFrom CCPA regs: \r\n\r\nhttps://cppa.ca.gov/regulations/pdf/cppa_regs.pdf#page=37\r\n\r\n```\r\n(6) A business may display whether it has processed the consumer\u2019s opt-out preference\r\nsignal as a valid request to opt-out of sale/sharing on its website. For example, the\r\nbusiness may display on its website \u201cOpt-Out Preference Signal Honored\u201d when a\r\nbrowser, device, or consumer using an opt-out preference signal visits the website, or\r\ndisplay through a toggle or radio button that the consumer has opted out of the sale\r\nof their personal information.\r\n```\r\n\r\nFrom the CG conversation ",
      "user": "AramZS",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment provides technical information related to California Consumer Privacy Act (CCPA) regulations and how businesses can display opt-out preference signals on their websites. It is a factual update that aims to inform others about specific details in the law, which is classified as technical feedback."
    },
    {
      "id": 1526017287,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/48",
      "created_at": "2023-04-27T16:43:03Z",
      "updated_at": "2023-04-27T16:43:03Z",
      "body": "CG felt strongly that this did not particularly satisfy any concerns about the resource and may have introduced new ones as such closing without merging at this time. ",
      "user": "AramZS",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "use_case",
      "reason": "The comment expresses CG's concern about whether the action taken (closing the issue without merging it) will address their specific needs or worries regarding the resource, suggesting that it may not fully satisfy their concerns."
    },
    {
      "id": 1526032194,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/38",
      "created_at": "2023-04-27T16:55:56Z",
      "updated_at": "2023-04-27T16:55:56Z",
      "body": "CG came to agreement for an update to this text. @arichiv will author. ",
      "user": "AramZS",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment expresses a technical decision or action (authoring of the text) that is related to improving or updating documentation, which is typically classified as a technical feedback item."
    },
    {
      "id": 1531343412,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/38",
      "created_at": "2023-05-02T11:58:10Z",
      "updated_at": "2023-05-02T11:58:10Z",
      "body": "@AramZS how does this look?",
      "user": "arichiv",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "use_case",
      "reason": "The comment is providing feedback on the appearance of a piece of code or a presentation, specifically indicating if something looks good to Aram Zohar. This type of information is typically related to usability and functionality rather than technical implementation or philosophical discussions."
    },
    {
      "id": 1544207575,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/50",
      "created_at": "2023-05-11T15:32:07Z",
      "updated_at": "2023-05-11T15:32:07Z",
      "body": "That is good in my view!",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides feedback on something related to functionality or quality, indicating that it was helpful and useful. It does not appear to be related to the user's use case, request, or any administrative aspect of the system. There is no mention of a philosophical discussion or an unresolved issue."
    },
    {
      "id": 1544444309,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/6",
      "created_at": "2023-05-11T17:57:36Z",
      "updated_at": "2023-05-11T17:57:36Z",
      "body": "Thanks @mnot ! \r\n\r\nI think this is a candidate to be closed. Does anyone strongly feel otherwise? If not, I'll close by the end of this month. ",
      "user": "AramZS",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "The comment expresses an opinion on whether the issue should be considered a feature request, suggesting that it is sufficient for someone else (mnot) to \"close\" it, implying it may not be worth revisiting or improving further in the future."
    },
    {
      "id": 1583111277,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/34",
      "created_at": "2023-06-08T18:05:52Z",
      "updated_at": "2023-06-08T18:05:52Z",
      "body": "Different user agents conceive of Incognito mode/private mode in different ways and enable different features. I'm not sure it makes sense to try to dictate a reaction to such a mode at the level of this specification. Can we discuss in the next PrivacyCG? ",
      "user": "AramZS",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment expresses the author's concern that the technical details of Incognito mode/private mode might be too complex or unclear for developers to fully understand and implement according to this specification, suggesting a need for further clarification."
    },
    {
      "id": 1598745673,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/38",
      "created_at": "2023-06-20T13:09:39Z",
      "updated_at": "2023-06-20T13:09:39Z",
      "body": "@npdoty for review",
      "user": "arichiv",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment appears to be a request from npdoty ( possibly an organization or individual within that group) to provide feedback on the code being reviewed, in this case, it seems they are looking for suggestions or opinions. It's generally considered constructive and informative as it asks others to review their work or the current status of something."
    },
    {
      "id": 1604802693,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/38",
      "created_at": "2023-06-23T19:46:29Z",
      "updated_at": "2023-06-23T19:46:29Z",
      "body": "Thanks, Ari. One editorial correction. Editors, feel free to merge and make any fixes yourself.",
      "user": "npdoty",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment is providing feedback on technical issues or errors that need to be addressed in the code or document being reviewed, specifically suggesting corrections to editors. It does not appear to be related to a feature request, use case, administrative task, conclusion/resolution, or philosophical discussion."
    },
    {
      "id": 1604891544,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/38",
      "created_at": "2023-06-23T20:13:15Z",
      "updated_at": "2023-06-23T20:13:15Z",
      "body": "@martinthomson, would you like to review this PR? (If you are busy, feel free to let me know, and I can do it.)",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment is asking for a technical review of the provided pull request (PR). This type of communication is typically used between developers or team members to share information, discuss code changes, or ask for guidance on how to implement something."
    },
    {
      "id": 1611414956,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/38",
      "created_at": "2023-06-28T13:29:11Z",
      "updated_at": "2023-06-28T13:29:11Z",
      "body": "@martinthomson for review",
      "user": "arichiv",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "administrative",
      "reason": "This comment appears to be a formal notification or request from someone (likely Chris Thompson, as it is signed by \"@martinthomson\") requesting that another person (Martyn Thomson) performs the task of reviewing something. It does not seem to provide any specific feedback, use case, feature request, conclusion/resolution, philosophical discussion, or contain unknown information. The primary purpose appears to be administrative in nature."
    },
    {
      "id": 1634682385,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/33",
      "created_at": "2023-07-13T18:08:47Z",
      "updated_at": "2023-07-13T18:08:47Z",
      "body": "If there are further issues please submit as a separate issue. ",
      "user": "AramZS",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "use_case",
      "reason": "The comment appears to be related to user feedback or support, where the author is requesting that any additional issues or concerns should be reported separately rather than directly in this thread. This is a common practice for tracking and managing multiple requests or issues related to the same topic or product."
    },
    {
      "id": 1634688941,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/36",
      "created_at": "2023-07-13T18:14:41Z",
      "updated_at": "2023-07-13T18:14:41Z",
      "body": "@martinthomson The changes we now have merged in were agreed upon as potentially needing additional text beyond what is there. Would you like to suggest something that would improve clarity or close this issue?",
      "user": "AramZS",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "This comment is requesting a feature addition that suggests further development of the current change, implying that some aspects may be unclear or in need of improvement. The language used (\"would you like to suggest\") also implies that there's an opportunity for constructive input or collaboration."
    },
    {
      "id": 1637928379,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/36",
      "created_at": "2023-07-17T11:22:22Z",
      "updated_at": "2023-07-17T11:22:22Z",
      "body": "I'm still unhappy with the \"we tried not to make it worse, really\" implications of that last statement.\r\n\r\nWhy not just say something like:\r\n\r\n> Exposing a user's preference (in the HTTP header field or `navigator` object[^1]) potentially divides users into two groups in a way that might increase the information available for fingerprinting.  This extra information is available unless the signal perfectly correlates with other signals [^3]. This represents a privacy cost that is justified[^2] by the privacy advantage provided by sending the signal. \r\n\r\n[^1]: Note that the formatting in the draft is [a little off](https://privacycg.github.io/gpc-spec/#privacy).\r\n[^3]: I wouldn't say this, but a decision to enable always would mean that the users of that browser don't contribute any signal beyond what the user agent identification would.\r\n[^2]: I don't know how to do this without the passive voice; I wanted to say \"we believe it to be justified\", but \"we\" is super ambiguous, which I don't like.",
      "user": "martinthomson",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "philosophical",
      "reason": "The comment expresses a philosophical opinion about the implications of the statement in question. It questions whether it's morally justifiable to prioritize privacy over other concerns, such as fingerprinting, and whether the decision to expose user preferences is a good thing or a bad thing. This type of analysis requires careful consideration of ethical and moral dilemmas rather than technical information."
    },
    {
      "id": 1638742962,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/38",
      "created_at": "2023-07-17T19:27:30Z",
      "updated_at": "2023-07-17T19:27:30Z",
      "body": "@martinthomson have time to take another look and merge?",
      "user": "arichiv",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "The comment asks if the author can take another look at a task or feature they mentioned earlier, indicating that it requires review and potential changes."
    },
    {
      "id": 1640413712,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/38",
      "created_at": "2023-07-18T15:10:52Z",
      "updated_at": "2023-07-18T15:10:52Z",
      "body": "I'm OK with this, but the decision to merge is up to editors.",
      "user": "martinthomson",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "administrative",
      "reason": "This comment appears to be an administrative note or clarification regarding a decision-making process in a specific context (likely a content management system or online platform), indicating that the commentor has no objection to the decision itself, but rather wants to acknowledge it."
    },
    {
      "id": 1640418051,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/51",
      "created_at": "2023-07-18T15:13:28Z",
      "updated_at": "2023-07-18T15:13:28Z",
      "body": "Making this infinitely extensible is a bad idea IMO. Part of the strength of GPC is that it is a single choice for a user that represents a \"more private\" experience that reflects a very sane boundary. \r\n\r\nBy changing the semantics, we may be throwing away California's progress in enforcement by changing the meaning out from under them. \r\n\r\nIf there are more compelling use cases we could add another header or two in this spec. `Sec-*: 1` should compress well. I understand the concern of not wanting to have multiple headers for very similar semantics, however I don't think the set of things the user can reasonably be asked to opt out of with every request is that big. Maybe just a couple more? Even ADPC only provides a single value for the `object` option. ",
      "user": "bvandersloot-mozilla",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "The commenter suggests adding additional headers to the spec to accommodate different user options, such as \"Sec-*\" which compresses well and is related to security features, rather than just being a generic header as mentioned in the comment. They also propose keeping only a couple of headers for common use cases, implying that adding more might not be necessary or justified."
    },
    {
      "id": 1640425620,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/52",
      "created_at": "2023-07-18T15:17:52Z",
      "updated_at": "2023-07-18T15:17:52Z",
      "body": "I agree that setting a norm for a string, if not a requirement, would be useful given the legal implications.\r\n\r\nI am working internally in Firefox to get language set now. One idea we have had that I am partial to is \"Tell websites not to sell or share my data\" with a link to learn more. ",
      "user": "bvandersloot-mozilla",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "use_case",
      "reason": "This comment expresses an idea or proposal for improvement related to the user interface of Firefox, specifically regarding setting a norm for strings and informing users about their privacy settings. It is not directly related to technical aspects of the browser, administrative tasks, philosophical debates, or unknown scenarios."
    },
    {
      "id": 1640647858,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/38",
      "created_at": "2023-07-18T17:19:29Z",
      "updated_at": "2023-07-18T17:19:29Z",
      "body": "> I'm OK with this, but the decision to merge is up to editors.\r\n\r\n@martinthomson, can you approve your review? Then, I will merge. ",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides technical feedback on a previous action or decision by someone else (the editor), suggesting that they approve the decision and indicating their intention to take further action (merge). The tone is neutral and does not appear to be asking for anything else, so it falls under technical feedback."
    },
    {
      "id": 1648714893,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/53",
      "created_at": "2023-07-24T22:33:43Z",
      "updated_at": "2023-07-24T22:33:43Z",
      "body": "Could we do this section as a [Registry](https://www.w3.org/2023/Process-20230612/#registries) so it can be updated outside the WG process? This would be an unexpected use for registries, but it seems to mostly fit. I think the biggest challenge would be defining how the custodian should figure out whether a proposed entry is legally correct.",
      "user": "jyasskin",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "The comment suggests creating a new registry specifically designed for adding new sections or entries in this process, which aligns with the purpose of registries to define and standardize a set of activities. However, it's unclear what features or changes would be included in such a registry, making it difficult to categorize based on the information provided."
    },
    {
      "id": 1648730723,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/51",
      "created_at": "2023-07-24T22:54:14Z",
      "updated_at": "2023-07-24T22:54:14Z",
      "body": "+1 that it shouldn't be infinitely extensible (unlike parts of ADPC): adding values should require a change to the standard. The GPC spec mentions 3 plausible values so far: sale, direct-marketing, and (unnecessary) local storage. I don't think there's a need to include all 3 in the first version, but this issue is about ensuring that there's semantic space for them. If that's just a described naming pattern for future extensions to follow, I think that'd be ok.\r\n\r\n`Sec-*: 1` doesn't compress that well under [HPACK](https://httpwg.org/specs/rfc7541.html#detailed.format), which allows re-using field names or (name,value) pairs, but doesn't re-use parts of names. That said, the size isn't likely to be a big problem here.",
      "user": "jyasskin",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment provides detailed feedback and suggestions for improving the code, specifically regarding the handling of security-related fields in the Sec-* header. It aims to ensure that these fields are used correctly and do not cause unnecessary complexity or overhead."
    },
    {
      "id": 1649693839,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/51",
      "created_at": "2023-07-25T11:57:08Z",
      "updated_at": "2023-07-25T11:57:17Z",
      "body": "> If that's just a described naming pattern for future extensions to follow, I think that'd be ok.\r\n\r\nThat would be reasonable. Having a naming pattern called out and understanding that future variations can land here. \r\n\r\nI think we agree that using the cookie namespace for the variations is non-ideal and we would be closer to ADPC syntax if we had no adoption yet. \r\n\r\n> Sec-*: 1 doesn't compress that well under [HPACK](https://httpwg.org/specs/rfc7541.html#detailed.format), which allows re-using field names or (name,value) pairs, but doesn't re-use parts of names. \r\n\r\nYou caught me, I forgot that header compression was tricky :) ",
      "user": "bvandersloot-mozilla",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides feedback on the suggested naming pattern for future extensions to the HTTP/2 specification (\"That would be reasonable\"), as well as technical details about how the cookie namespace will not compress with HPACK. The tone is constructive and aimed at improving the specification, rather than making a request or asking an opinion."
    },
    {
      "id": 1650242390,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/51",
      "created_at": "2023-07-25T17:25:30Z",
      "updated_at": "2023-07-25T17:25:30Z",
      "body": "> we would be closer to ADPC syntax if we had no adoption yet.\r\n\r\nIt seems like you're saying that because someone shipped and there's some adoption, the standards process can't change any of the names anymore. While lots of Chrome teams would be happy with that policy, it's not usually the policy we follow for the web platform, especially for features that shipped before getting any feedback from other browsers.",
      "user": "jyasskin",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment is providing technical input and suggestions on how to improve or enhance a specific aspect of Chrome, namely its Adoptability Data Points (ADPC) syntax. It suggests alternative approaches and proposes changes based on observed behavior."
    },
    {
      "id": 1652523786,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/36",
      "created_at": "2023-07-26T21:30:44Z",
      "updated_at": "2023-07-26T21:30:44Z",
      "body": "FWIW, I'm mostly fine with @martinthomson 's suggested text, with the following change:\r\n\r\nChange:\r\n\r\n> This represents a privacy cost that is justified by the privacy advantage provided by sending the signal.\r\n\r\nto\r\n\r\n> Depending on the browser and implementation, the GPC signal may impose a privacy cost, though one intended to be justified by the privacy advantage provided by sending the signal.\r\n\r\nI think this change is important bc the previous sentence recognizes that in some deployments the GPC signal doesn't provide additional fingerprinting-signal. My suggestion aims to just carry that recognition into the next sentence.\r\n\r\nIf that all sounds good / no one opposes it, i'll update the PR and merge",
      "user": "pes10k",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides specific suggestions for improving the text, with a focus on clarifying or refining technical details. It does not address broader issues such as use cases, features, or administrative aspects of the codebase. The tone is informative and helpful, indicating that its purpose is to improve the quality or clarity of the proposed change."
    },
    {
      "id": 1692073308,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/34",
      "created_at": "2023-08-24T16:54:32Z",
      "updated_at": "2023-08-24T16:54:32Z",
      "body": "Some brief notes from the perspective of the meeting about things to add to address this: \r\n\r\nContext matters, browsers understand what people want, they try very hard to interpret and there needs to be flexibility on defaults and activation at the browser level. Should make it clear that GPC default settings is based on the user agent or extensions' understanding of how they anticipate their audience behaves. Browser modes alteration of user state in this signal should be considered based on the accompanying messaging to the browser users. Add in as deeper context around how to make the decisions and expectations. Maybe also an explainer for how this has worked and resources from legal decisions, regulator statements, etc... ",
      "user": "AramZS",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "The commenter suggests adding features or considerations related to browser defaults, user state management, and decision-making processes in the context of GPC (Global Platform Communication) settings. This includes clarifying default settings based on user agents and extensions' understanding, as well as providing additional information on how these decisions are made and what has worked in similar contexts."
    },
    {
      "id": 1692087800,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/34",
      "created_at": "2023-08-24T16:59:37Z",
      "updated_at": "2023-08-24T16:59:37Z",
      "body": "How browsers interpret user intent or anticipate user expectations is a bit of a science and a bit of an art, but I think that this conclusion is right.  We plan to clearly document our rationale for how we interpret various signals and use those to decide to turn GPC on or off.  We're happy to share that.",
      "user": "martinthomson",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "administrative",
      "reason": "This comment appears to be a statement about internal company information, such as the process of interpreting user intent, rather than addressing specific technical issues or providing feedback on code. The tone is neutral and informative, suggesting it's an administrative note rather than something that would require further review or analysis."
    },
    {
      "id": 1703833426,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/52",
      "created_at": "2023-09-02T13:25:14Z",
      "updated_at": "2023-09-02T13:25:14Z",
      "body": "\"Tell websites not to sell or share my data\" might be tailored to the scope of opt-outs for some laws, but not others that have broader opt-outs, for example. If the GPC field sticks to a boolean value, the language might need to clarify other ways it could be interpreted (in addition to the \u2018learn more\u2019 link with more complete information). We flag these questions to consider, as many actors in the ecosystem will be required to figure out how to parse and respond to these signals.",
      "user": "arichiv",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "administrative",
      "reason": "The comment is primarily focused on administrative and technical aspects of the given subject matter, specifically regarding language clarifications and potential interpretations for opt-out signals. It does not seem to be a question requiring feedback or advice, nor does it appear to be a discussion of the use case or feature request side."
    },
    {
      "id": 1703833545,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/51",
      "created_at": "2023-09-02T13:25:48Z",
      "updated_at": "2023-09-02T13:25:48Z",
      "body": "There is some adoption on the user agent side and web side, but multiple localities have automated opt-out clauses that only go into effect in 2024. Don\u2019t we still have time to revisit the format of the header? The [ADPC](https://www.dataprotectioncontrol.org/spec/#objecting-to-processing-http) pattern may be relevant for opt-outs limited to targeted advertising, sale of personal data, or both. We should anticipate more, distinct opt out requirements in the future and don\u2019t want to end up with Sec-GPC2, Sec-GPC3, etc. fields in the not-too-distant future.",
      "user": "arichiv",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "The comment is requesting changes to the HTTP header format for handling specific types of opt-out clauses that are being implemented at the user agent and web sides, as well as proposing additional, distinct opt-out requirements in the future. This suggests a need for improvement or enhancement in this area."
    },
    {
      "id": 1712190256,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/51",
      "created_at": "2023-09-08T20:31:56Z",
      "updated_at": "2023-09-08T20:31:56Z",
      "body": "> > If that's just a described naming pattern for future extensions to follow, I think that'd be ok.\r\n> \r\n> That would be reasonable. Having a naming pattern called out and understanding that future variations can land here.\r\n\r\nA naming pattern could help; I wouldn't expect it to be in the normative spec itself (though I don't care strongly where it ends up). \r\n\r\nI think more helpful would be advice from implemented experience on sending opt-out signals and their usage. \r\n\r\nDifferent opt-outs (though I don't anticipate many of these will see strong legal support or wide interest for some time) will have potentially quite different semantics, how they're explained to users, how they're interpreted by websites, even which parties or with which data they're communicated in the browser. Guidance and lessons learned on how to write and deploy such a mechanism seems more helpful than anticipatory architectural design to use the same header for other rights or controls.",
      "user": "npdoty",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment provides constructive feedback on the technical aspects of the specification, specifically addressing concerns about naming patterns, opt-out signals, and guidance on implementing such mechanisms. It does not offer a new feature, propose a use case, request an administrative action, or discuss philosophical implications of a particular issue."
    },
    {
      "id": 1712504710,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/51",
      "created_at": "2023-09-09T12:53:07Z",
      "updated_at": "2023-09-09T12:53:07Z",
      "body": "> Don\u2019t we still have time to revisit the format of the header? \r\n\r\nI think this is a good question for the editors and those that did outreach in California where GPC already constitutes a binding opt-out. ",
      "user": "bvandersloot-mozilla",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "The comment suggests revisiting the format of the header, which implies that it could be improved to better suit the needs or context of GPC (Game Promotion Committee) or similar entities. This is in contrast to purely technical feedback, use case analysis, administrative concerns, or philosophical discussions."
    },
    {
      "id": 1728216731,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/52",
      "created_at": "2023-09-20T18:12:25Z",
      "updated_at": "2023-09-20T18:12:25Z",
      "body": "I submitted PR #57 to try to provide more information about existing legal guidance on UI requirements. I do not think it is practical to get browsers to agree on specific disclosures since at least some user agents have stated an intent to continue to turn GPC on by default (which is allowable under certain conditions under at least both California and Colorado regulations). And even if W3C were to agree on consensus language, there is no certainty that regulators (who have the final say in their jurisdictions) would agree with our interpretation of what is or is not legally required. I think it is unlikely that regulators are going to require or even bless specific language formulations, though if any do we should certainly update our documentation to reflect that.\r\n\r\nBecause legal guidance will continue to evolve, I agree with the proposal from @AramZS to set up an explainer document with more detail about legal requirements that can be updated more regularly than this spec (see Issue #56). ",
      "user": "j-br0",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The commenter is providing suggestions and opinions on how to improve or refine the existing proposal, specifically addressing concerns about browser compatibility and regulatory interpretation. They are not asking for a change in the technical implementation of the UI requirements but rather providing feedback on best practices or potential issues that could arise from different interpretations."
    },
    {
      "id": 1728258858,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/53",
      "created_at": "2023-09-20T18:46:05Z",
      "updated_at": "2023-09-20T18:46:05Z",
      "body": "We could alternatively create a separate explainer document for implementers as @AramZS proposed in Issue #56. I don't have a strong feeling about whether an explainer or a registry makes sense, but it probably does make sense for details about various and evolving legal guidance to be in a separate document outside of the spec itself.\r\n\r\nEither way, we should stay away from too much normative interpretation of different jurisdictions' legal requirements and stick to just trying to accurately capture the relevant text of statutes, regulations, or other policy statements from legislators and regulators.",
      "user": "j-br0",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides constructive feedback on how to implement the proposed solution (creating a separate explainer document) and suggests an alternative approach (using a registry). The primary focus is on improving the technical implementation."
    },
    {
      "id": 1730008482,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/52",
      "created_at": "2023-09-21T17:27:53Z",
      "updated_at": "2023-09-21T17:27:53Z",
      "body": "We have a paper at the Privacy Enhancing Technologies Symposium next year that may be relevant,\r\n[Generalizable Active Privacy Choice: Designing a Graphical User Interface for Global Privacy Control](https://github.com/privacycg/gpc-spec/files/12689566/GPC_Privacy_Choice_Paper.pdf).\r\n\r\nThe question we address is how GPC can be integrated into the browser without default settings, compliant with the law, and in a usable way. The main idea is to generalize settings, e.g., apply the GPC opt out on site towards all future sites people visit.\r\n",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "use_case",
      "reason": "This comment describes an existing research paper (or potential paper) that explores how Generalized Privacy Control can be integrated into a browser without default settings. It mentions specific design considerations, such as integrating the GPC opt-out feature across multiple sites and ensuring compliance with law."
    },
    {
      "id": 1778454934,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/56",
      "created_at": "2023-10-25T03:39:01Z",
      "updated_at": "2023-10-25T03:39:01Z",
      "body": "@SebastianZimmeck, is there a specific question that the group can help you with here?  Also, how much time do you expect that discussion to take?  I think that we can find time for this at the meeting this week, but I need a little help with scheduling.",
      "user": "martinthomson",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "administrative",
      "reason": "The comment is an administrative request from a user (SebastianZimmeck) seeking guidance on how to schedule a discussion regarding technical issues. It doesn't contain any specific feedback or suggestions about the group's work, nor does it ask for help with a particular feature or use case."
    },
    {
      "id": 1779527580,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/56",
      "created_at": "2023-10-25T15:23:35Z",
      "updated_at": "2023-10-25T15:23:35Z",
      "body": "Here is the [explainer](https://docs.google.com/document/d/14e7iWqm2zmyEShNq5yGXVrnYQC5BVBMhnNrMRtpOmwM/edit?pli=1). \r\n\r\n@martinthomson, the question is what, if anything, should be changed in the explainer to make it most helpful to implementers (e.g., publishers, browser vendors)?\r\n\r\nI think 15 minutes would be a good amount of time to reserve.",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "The commenter suggests reserving a specific amount of time for implementing the explainer, which may not provide enough guidance for publishers and browser vendors who need more detailed instructions. This type of suggestion is typically related to implementing features or resolving issues with a system, product, or process."
    },
    {
      "id": 1780989187,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/56",
      "created_at": "2023-10-26T12:11:45Z",
      "updated_at": "2023-10-26T12:11:45Z",
      "body": "Some feedback:\r\n\r\n* The header needs to be a structured header. We should not add new non-structured headers to the web platform. (I have given this feedback a number of times.)\r\n* The new member of `Navigator` should always be present and return false when the signal is not present. Conditional members are generally not supported by Web IDL and also bad for a number of optimizations around object shapes and such.",
      "user": "annevk",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides specific suggestions to improve the web platform's functionality, which falls under technical improvements or bug fixes aimed at enhancing its stability and usability."
    },
    {
      "id": 1781257336,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/56",
      "created_at": "2023-10-26T14:35:04Z",
      "updated_at": "2023-10-26T14:35:04Z",
      "body": "> The new member of Navigator should always be present and return false when the signal is not present. Conditional members are generally not supported by Web IDL and also bad for a number of optimizations around object shapes and such.\r\n\r\nThe spec defines it as always present, and false if the user hadn't expressed a do-not-sell-or-share preference at the time of navigation. The spec is reasonable imo.",
      "user": "bvandersloot-mozilla",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides constructive feedback on a specific technical aspect of a specification (the behavior of Navigator's conditional members), suggesting an improvement or adjustment to achieve better results or minimize issues in practice. It does not relate to the use case, feature request, administrative aspects, conclusion/resolution, philosophical discussion, or are otherwise unknown within this context."
    },
    {
      "id": 1781438061,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/6",
      "created_at": "2023-10-26T16:17:31Z",
      "updated_at": "2023-10-26T16:17:31Z",
      "body": "I continue to think this is important to address before this is more widely adopted. This gives us some extensibility and also overall consistency with all new headers we add to the web platform.",
      "user": "annevk",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment provides a specific technical opinion about an issue (a lack of consistency in handling new headers), suggesting that it is aimed at improving or proposing changes to address this problem."
    },
    {
      "id": 1781440364,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/6",
      "created_at": "2023-10-26T16:18:58Z",
      "updated_at": "2023-10-26T16:18:58Z",
      "body": "If this is going to be re-opened, I'd suggest we also consider whether the `Sec-` prefix is needed.",
      "user": "martinthomson",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "The comment suggests that the feature (possibly related to security) should not have a `Sec-` prefix, indicating a request for a simpler or more straightforward naming convention."
    },
    {
      "id": 1781445722,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/51",
      "created_at": "2023-10-26T16:22:24Z",
      "updated_at": "2023-10-26T16:22:24Z",
      "body": "If we are changing the syntax of the header (e.g. because of #6), I'm much more open to the idea of allowing other rights to be expressed via this header.",
      "user": "bvandersloot-mozilla",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "The comment suggests a potential change in the syntax of an existing feature, which is typically something that can be improved or fixed rather than providing new functionality."
    },
    {
      "id": 1781488064,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/56",
      "created_at": "2023-10-26T16:49:58Z",
      "updated_at": "2023-10-26T16:49:58Z",
      "body": "As discussed in [today's PrivacyCG meeting](https://docs.google.com/document/d/1DZEhS1UHJ1PKxt5ZwKmn5LZ4bo10UFyNXeLp2dUuzRM/edit#heading=h.9a4smtitowo2), please feel free to add your suggestions to the [Explainer](https://docs.google.com/document/d/14e7iWqm2zmyEShNq5yGXVrnYQC5BVBMhnNrMRtpOmwM/edit?usp=sharing) within the next two weeks. At that point, we will convert the Explainer format to markdown and open a PR here.",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "This comment requests new features or improvements to be added to the Explainer documentation in the future, indicating it is about adding more functionality to an existing system."
    },
    {
      "id": 1781544968,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/6",
      "created_at": "2023-10-26T17:30:43Z",
      "updated_at": "2023-10-26T17:30:43Z",
      "body": "That should probably be a separate issue as that raises the question of what should happen when a website sets it.",
      "user": "annevk",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "The comment is expressing an idea or suggestion for improvement, specifically requesting to have something (a set) handled differently. This aligns with the common classification of feature requests in software development and design, where users propose changes to make a product more useful or efficient."
    },
    {
      "id": 1815663967,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/58",
      "created_at": "2023-11-17T02:45:15Z",
      "updated_at": "2023-11-17T02:45:15Z",
      "body": "@dmarti, can you review this change? I would like to add a .gitignore. ",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment is providing technical assistance and guidance on how to use or configure a tool (a Git repository), which falls under the category of \"Technical Feedback\"."
    },
    {
      "id": 1836479822,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/56",
      "created_at": "2023-12-01T17:10:48Z",
      "updated_at": "2023-12-01T17:10:48Z",
      "body": "The explainer is now merged into main.\r\n\r\n> The header needs to be a structured header. \r\n\r\nThis point is discussed in #6.\r\n\r\n> The spec defines it as always present, and false if the user hadn't expressed a do-not-sell-or-share preference at the time of navigation. The spec is reasonable imo.\r\n\r\nAgreed.",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "use_case",
      "reason": "This comment discusses specific requirements or decisions related to a user interface feature (\"The explainer is now merged into main\") and its interaction with other parts of the specification, but does not directly address functionality, technical details, or design principles."
    },
    {
      "id": 1856833507,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/60",
      "created_at": "2023-12-14T22:38:05Z",
      "updated_at": "2023-12-14T22:38:05Z",
      "body": "GPC is designed to be a binary signal --- either it's on or it's not. There is no third state. If the user has activated GPC, it seems like the header should always be transmitted (unless some edge case or technical challenge I'm not thinking of). The user agent generally won't know the extent to which the recipient has seen, logged, or responded to previous GPC signals, so the header should be always sent so long as the consumer hasn't changed their preference. On the other hand, if the user hasn't activated GPC, or subsequently turns it off, the signal should never be sent (what constitutes user intent to turn on the signal is a different question raised by Issue #52).\r\n\r\nI can imagine a mechanism where a user agent could be configured by the user to whitelist certain domains to not receive the signal (e.g., a particular website asks to be exempted from the general preference to not have data shared and the user agrees). I would be fine clarifying that in the spec, though again the signal would still be binary: either the header would be persistently sent because the user wants to send it to that domain, or the header wouldn't be sent. I don't know if we need to get into that level of granularity but I don't feel strongly either way.\r\n\r\nFWIW, the [California regulations](https://cppa.ca.gov/regulations/pdf/20230329_final_regs_text.pdf) on Opt-out Preference Signals state that if a business had previously received an opt-out signal from a known user but then stops receiving the signal, the business should still treat the user as opted out unless they receive explicit permission to undo the opt-out:\r\n\r\nWhere the consumer is known to the business, the business shall not interpret the \r\nabsence of an opt-out preference signal after the consumer previously sent an opt-out \r\npreference signal as consent to opt-in to the sale or sharing of personal information. \r\n\r\n\u00a7 7025(c)(5). Other jurisdictions may treat opt-out/re-opt-in differently, so I don't think the spec should get into detail about what sort of consent or interface is legally required.",
      "user": "j-br0",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment provides detailed information and suggestions for improving the design and behavior of Google Pay Credit (GPC), specifically regarding its handling of opt-out signals. It offers technical solutions and clarifications to address potential issues with user agent configuration, signal persistence, and regulatory compliance."
    },
    {
      "id": 1856866589,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/62",
      "created_at": "2023-12-14T22:52:00Z",
      "updated_at": "2023-12-14T22:52:00Z",
      "body": "From an implementation perspective, having support for a feature means that the associated interfaces and items are present.\r\n\r\nThe difference with HTTP is that boolean fields that are not present are simply assumed to be false (I know you aren't using modern definitions for fields -- naughty -- but that is the best way to model `Sec-GPC`).\r\n\r\nI guess the real question is whether we should invest in making the attribute hidden when GPC has not been enabled.  That is irregular, but I believe it is technically feasible.  Is there a good reason not to expose a value of `false`?",
      "user": "martinthomson",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "use_case",
      "reason": "The comment discusses a technical implementation aspect related to a specific feature or functionality, which in this case is support for a feature and the modeling of boolean fields in the context of HTTP security content (GPC). The question posed at the end addresses a use case-related concern, whether to expose the default value when GPC has not been enabled."
    },
    {
      "id": 1882564641,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/62",
      "created_at": "2024-01-09T07:53:55Z",
      "updated_at": "2024-01-09T07:53:55Z",
      "body": "Correcting the HTTP field is still an open issue: #6.\r\n\r\nThe member of `Navigator` should always be present as conditionally hiding interface members is rather unprecedented and there's no good reason to do so.\r\n\r\nAs with the header we should just give guidance that websites only pay attention to the true state.\r\n\r\n(And yes, we wouldn't transmit the header in its false state, but that's just because it's a different mechanism and we want to be efficient on the wire.)",
      "user": "annevk",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "The comment is requesting a change or enhancement to improve an existing component (the `Navigator` class) by suggesting that a specific functionality (correcting the HTTP field) should be implemented. It also implies adding guidance that websites only pay attention to the true state, which could influence how the code is written and maintained."
    },
    {
      "id": 1883680366,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/64",
      "created_at": "2024-01-09T19:48:44Z",
      "updated_at": "2024-01-09T19:48:44Z",
      "body": "> https://global-privacy-control.glitch.me/ says it should return 1\r\n\r\nThis says the navigator property should be a boolean. \"This value mirrors the value sent in the Sec-GPC header: it will equal true if the Sec-GPC header sent is equal to \"1\", and false otherwise.\"\r\n\r\n> Chrome returns 1\r\nI don't believe Chrome has native support of `navigator.globalPrivacyControl`- how have you enabled it for your testing? \r\n\r\n> https://developer.mozilla.org/en-US/docs/Web/API/Navigator/globalPrivacyControl also indicates it isn't supported anywhere except Firefox, which seems false. They are missing the specs as well so there seems a big gap\r\n\r\nThe spec is in the [See Also](https://developer.mozilla.org/en-US/docs/Web/API/Navigator/globalPrivacyControl#see_also) section. And I think among the browsers in the table, Firefox is currently the only one to support GPC without a browser extension.",
      "user": "bvandersloot-mozilla",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "administrative",
      "reason": "This comment appears to be discussing an internal or organizational matter related to the global privacy control feature of the web browser, specifically whether it should return 1 (true) instead of 0 (false) when the Sec-GPC header is set to \"1\". It seems that a decision has been made internally and does not require external feedback."
    },
    {
      "id": 1887680170,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/62",
      "created_at": "2024-01-11T17:54:52Z",
      "updated_at": "2024-01-11T17:56:43Z",
      "body": "In the meeting of PrivacyCG for Jan 11 2024 we have concluded that the specification should note that the `navigator` property *should* always be present, regardless of value. This is standard practice and the fingerprinting risk at the browser level is already going to be there because it will be known from the major browser version number. Documents will be updated to make this clear ",
      "user": "AramZS",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment provides a technical recommendation about the specification, which should note that the `navigator` property should always be present, regardless of its value. This is for the purpose of security and usability reasons, indicating that it's providing feedback on best practices or coding standards in a specific context (PrivacyCG)."
    },
    {
      "id": 1887685301,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/60",
      "created_at": "2024-01-11T17:58:24Z",
      "updated_at": "2024-01-11T17:58:24Z",
      "body": "Standards and discussion in the January 11 Privacy CG group have indicated that not transmitting the header when the user has not set or unset the control is the preferred process. With a note that we want to make the above clear (reverting the setting does not indicate an opt *in* when there was previously an opt *out*) we should update the documentation accordingly. ",
      "user": "AramZS",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment provides specific technical advice regarding the best practice for handling user preferences in a privacy context, making it primarily focused on ensuring that technical aspects are correct and up-to-date."
    },
    {
      "id": 1887694325,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/62",
      "created_at": "2024-01-11T18:04:11Z",
      "updated_at": "2024-01-11T18:04:11Z",
      "body": "Browser extension providers might possibly make a different choice (because their presence on a browser that doesn't support GPC could then be detected, and that could be an unnecessary and meaningful addition to fingerprinting surface), but could also reasonably conclude that not including the header at all when the user hasn't turned it on is compatible with feature-detection requirement in the spec: the user may not know about the feature at all and that effectively the feature isn't present for this user.\r\n\r\nWe could note somewhere in the spec that the navigator property definitely shouldn't be used to indicate that a user turned the setting off after turning it on at some point in the past. That is not what GPC means and not what this property should be used for. Probably no implementer would do that anyway and so a warning may be unnecessary; up to the editors.",
      "user": "npdoty",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment provides feedback on how browser extension providers might choose to implement their own setting detection, but notes that including the `navigator.property` in the fingerprinting surface is not strictly necessary for feature-detection. This suggests a technical critique of the specification rather than an advisory or recommendation."
    },
    {
      "id": 1887772160,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/64",
      "created_at": "2024-01-11T18:54:54Z",
      "updated_at": "2024-01-11T18:54:54Z",
      "body": "I agree we should make sure this is clear in the explainer: the header on the HTTP request is `1` the `navigator` property is `true` and that is the expected behavior. ",
      "user": "AramZS",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides a technical observation or insight about how something works, rather than expressing an opinion, requesting action, or making a philosophical statement. It also lacks any specific request for improvement or clarification, which are typically associated with Administrative or Conclusion/Resolution categories."
    },
    {
      "id": 1887780611,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/64",
      "created_at": "2024-01-11T19:00:53Z",
      "updated_at": "2024-01-11T19:00:53Z",
      "body": "Ah ok, I do have the GPC plugin from Protegis,  so that must be what is returning 1, so that would be a bug on their side according to the spec. I'm not clear if there is any overlap between this group and them, but I will send them an email. ",
      "user": "ryan-a-guthrie",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "use_case",
      "reason": "The comment provides information about a potential issue related to a specific plugin or service (GPC plugin from Protegis) that is returning an incorrect value (1). This suggests that the user wants to report and possibly fix this bug, which falls under the category of using their product."
    },
    {
      "id": 1910791467,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/62",
      "created_at": "2024-01-25T18:48:17Z",
      "updated_at": "2024-01-25T18:48:17Z",
      "body": "I think that #61's changes the explainer to make this clearer and makes the answer clear. ",
      "user": "AramZS",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "The comment is requesting a change in the explainer text to improve its clarity, indicating that it suggests an enhancement or improvement of a feature."
    },
    {
      "id": 1910792254,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/60",
      "created_at": "2024-01-25T18:48:51Z",
      "updated_at": "2024-01-25T18:48:51Z",
      "body": "#61 now merged covers this question well. ",
      "user": "AramZS",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment provides an objective assessment of the code, specifically about how well it addresses a particular issue (the merging of #61). It does not relate to any specific use case or feature request, nor is it an administrative note or conclusion/ resolution. Additionally, there is no philosophical or unknown aspect to this comment."
    },
    {
      "id": 1910795816,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/64",
      "created_at": "2024-01-25T18:51:23Z",
      "updated_at": "2024-01-25T18:51:23Z",
      "body": "@ryan-a-guthrie Does the new text in the explainer changes in #61 explain this sufficiently clearly?  ",
      "user": "AramZS",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "use_case",
      "reason": "The comment appears to be asking for clarification on whether the new text in the explainer in #61 adequately explains a specific use case. It seeks an opinion or confirmation regarding how well the explanation meets their needs, suggesting it's more of a usability-related inquiry."
    },
    {
      "id": 1910797115,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/52",
      "created_at": "2024-01-25T18:52:17Z",
      "updated_at": "2024-01-25T18:52:17Z",
      "body": "@jyasskin Does the latest state of the explainer satisfy your questions here enough that we can close the issue?",
      "user": "AramZS",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "This comment requests additional clarification or information to be added to an existing explainer, suggesting it is a feature request rather than a technical feedback or administrative inquiry."
    },
    {
      "id": 1910801879,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/53",
      "created_at": "2024-01-25T18:55:40Z",
      "updated_at": "2024-01-25T18:55:40Z",
      "body": " We think that maintaining these explanations in the explainer is for the best. @bvandersloot-mozilla - is the current text satisfactory in covering your concerns? ",
      "user": "AramZS",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment provides specific feedback on the content of the previous response, indicating a concern about the explanatory quality of the information being shared. It suggests that the current explanation may not fully address the issue at hand or provide sufficient context for understanding the concerns presented by @bvandersloot-mozilla."
    },
    {
      "id": 1915325858,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/52",
      "created_at": "2024-01-29T18:30:38Z",
      "updated_at": "2024-01-29T18:30:38Z",
      "body": "Looking at https://github.com/privacycg/gpc-spec/blob/main/explainer.md#6-user-experience-considerations-and-recommendations, I don't see clear answers to the questions in my original post.\r\n\r\n> As [discussed when we talked about adopting GPC into the Privacy CG](https://github.com/privacycg/meetings/blob/main/2022/telcons/10-27-minutes.md#notes), UAs aren't sure how to do this so that the header stays legally enforceable and has the intended effect across many jurisdictions. UAs also want to make it clear to users what happens when they turn on the header, and we need guidance about how that depends on where the user is, where the target site is based, the user's history of moving around, etc.\r\n\r\nFor example, if Chrome were to start sending the header by default, with no indication from the user that they intended to opt out of sale/sharing, would that remove sites' obligations in some jurisdictions to respect the header when it came from Chrome? And so is it something that the specification or explainer should tell Chrome not to do?\r\n\r\nI also don't see anything in the explainer yet that covers the concern about how we make the effects clear to users. I see the link to Robin's speculation about the effects under the GDPR, but our legal folks aren't convinced he's right. This might be a task to leave to the WG.",
      "user": "jyasskin",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment is providing specific feedback on technical aspects of the specification or explainer, such as clarifying ambiguities and suggesting potential issues with certain implementation decisions. It is not related to use cases, features requests, administrative tasks, conclusions/resolve, philosophical discussions, or unknown topics."
    },
    {
      "id": 1915550636,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/53",
      "created_at": "2024-01-29T20:55:48Z",
      "updated_at": "2024-01-29T20:55:48Z",
      "body": "It seems like a Registry is where you want a W3C-defined process to be the deciding factor in how something is applied. But in this case, what is being discussed is documenting decisions that are made elsewhere (in government bodies, primarily). \r\n\r\nCould the spec briefly and non-normatively summarize legal effects and provide an informative reference to a documentation page that could be kept up to date? A w3c wiki page or MDN, say. Or +1 to using an explainer for that purpose for now.",
      "user": "npdoty",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "use_case",
      "reason": "This comment is discussing how the Registry concept can be applied in a specific context (documenting decisions) and suggesting ways to achieve this goal, such as referencing external documentation sources or leveraging existing resources like W3C wikis. The main focus is on exploring alternative approaches rather than providing technical feedback."
    },
    {
      "id": 1916812994,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/53",
      "created_at": "2024-01-30T13:10:20Z",
      "updated_at": "2024-01-30T13:10:20Z",
      "body": "The current text is satisfactory for me!",
      "user": "bvandersloot-mozilla",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "philosophical",
      "reason": "This comment does not express any specific opinion about the product or its functionality. It simply states that the current text is satisfactory, which is a subjective and general statement that doesn't provide new insights or information to be considered technical feedback, use case, feature request, administrative, conclusion/resolution, or unknown."
    },
    {
      "id": 1926010018,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/67",
      "created_at": "2024-02-05T00:22:00Z",
      "updated_at": "2024-02-05T00:22:00Z",
      "body": "I dont have strong feelings about this, but i think it might be better to scrap the entire paragraph and, instead of describing it in terms of the unverifiable context:\r\n\r\n```A Global Privacy Control [=preference=] needs to be conveyed to all mechanisms that might collect data from a person or share a person's data with third parties.```\r\n\r\nand instead describe it in terms of what the client can verify, something like:\r\n\r\n```A Global Privacy Control [=preference=] should be conveyed for all HTTP requests (in the form of the HTTP header) and all websites (in the form of the Web API property).```\r\n\r\nThat said, i think this is fine too, so if the current PR gets merged too / instead",
      "user": "pes10k",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment provides constructive feedback on the proposed solution by suggesting an alternative approach. It suggests a change in wording to improve clarity and readability."
    },
    {
      "id": 1926068777,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/67",
      "created_at": "2024-02-05T01:39:20Z",
      "updated_at": "2024-02-05T01:39:20Z",
      "body": "I agree. Your suggestion makes it more clear, @pes10k. I updated the PR accordingly.",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides specific feedback on a suggested change made to a pull request (PR). It does not express an opinion or ask a question about a feature, use case, or administrative process. The mention of \"Your suggestion\" and \"@pes10k\" suggests that it is related to the PR but does not contain any explicit opinions or requests for changes."
    },
    {
      "id": 1984206085,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/68",
      "created_at": "2024-03-07T18:47:07Z",
      "updated_at": "2024-03-07T18:47:07Z",
      "body": "Hi, after some review, we're concerned about the future of adding more laws into the future into the body of the spec. Changes, once this spec continues along the document lifecycle, will enter a longer timeline of review and feedback and we want the rapidly changing landscape of privacy to be quickly reflected to people who want to understand GPC. Since there are likely a lot of new privacy laws that are applicable coming in the future, we think the best place for them is in the explainer.\r\n\r\nWould it be possible for you to put it into the explainer instead? https://github.com/privacycg/gpc-spec/blob/main/explainer.md or we can work on transforming it into there in this PR. Also, if you have any supporting documents or formal legal text that refers to privacy signals or GPC in particular, it would be useful to have it in the docs folder of this repository. \r\n\r\nThanks greatly for this contribution @loganaden - let us know what the best approach is to get it incorporated into the explainer! ",
      "user": "AramZS",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "The reviewer is suggesting that a new section or content within an existing document (the spec) be moved there, specifically the part about adding more laws. This indicates a feature request for modifying the existing content to better address future privacy-related developments and improve user understanding of GPC."
    },
    {
      "id": 1984725259,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/70",
      "created_at": "2024-03-07T22:57:15Z",
      "updated_at": "2024-03-07T22:57:15Z",
      "body": "Per @martinthomson's [suggestion](https://github.com/privacycg/gpc-spec/issues/69#issue-2174843185), I added section headers for the different laws and made a few other small editorial changes, none of which are intended to change any meaning. @j-br0, can you review if everything still stands as you intended? ",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment provides constructive feedback on whether adding section headers for specific laws in the gpc-spec documentation is a good idea and whether it alters the original intent of the author."
    },
    {
      "id": 1984790832,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/68",
      "created_at": "2024-03-07T23:44:53Z",
      "updated_at": "2024-03-07T23:44:53Z",
      "body": "On the general point of where to capture information about implementation in law, perhaps a separate document (or wiki page, if you were willing to tempt fate) is better.  The section on laws is already fairly unwieldy and distracting.  A separate document might lend itself to more structure, without distracting from the central message in the explainer.",
      "user": "martinthomson",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "philosophical",
      "reason": "This comment touches on the fundamental nature of information management, specifically how best to organize and present implementation details within a legal context. It raises questions about the purpose and usefulness of current documentation versus creating a new, separate resource for these purposes, which is a philosophical perspective on how information should be categorized and presented."
    },
    {
      "id": 1984944152,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/52",
      "created_at": "2024-03-08T02:39:06Z",
      "updated_at": "2024-03-08T02:39:06Z",
      "body": "> I see the link to Robin's speculation about the effects under the GDPR, but our legal folks aren't convinced he's right.\r\n\r\nI'd say [@darobin's point](https://berjon.com/gpc-under-the-gdpr/) is a bit more than speculation. Notably, the [Landgericht Berlin required LinkedIn to honor DNT signals based on GDPR, Article 21(5)](https://www.vzbv.de/sites/default/files/2023-10/Teil-%20und%20Schlussurteil_LG%20Berlin_24.08.2023.pdf) (in German).",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "use_case",
      "reason": "The comment is about a specific use case (the requirement under GDPR for LinkedIn to honor DNT signals), and it provides evidence from an external source, which adds to the value of understanding this use case."
    },
    {
      "id": 1985073388,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/68",
      "created_at": "2024-03-08T05:43:27Z",
      "updated_at": "2024-03-08T05:43:27Z",
      "body": "Wherever this winds up, someone should check that the cited sections of the law actually address the effect of a GPC request. The text mentions Articles 23 and 24. Article 23 is\r\n\r\n> a controller shall not collect\r\npersonal data unless (a) it is done for a lawful purpose connected with a\r\nfunction or activity of the controller; and (b) the collection of the data is necessary for that\r\npurpose.\r\n\r\n(not about opt-outs)\r\n\r\n> the controller shall, at the\r\ntime of collecting the personal data, ensure that the data subject\r\nconcerned is informed of  ...\r\n\r\n(not about opt-outs)\r\n\r\nArticle 24 is\r\n\r\n> (1) The controller shall bear the burden of proof for\r\nestablishing a data subject\u2019s consent to the processing of his\r\npersonal data for a specified purpose.\r\n> (2) The data subject shall have the right to withdraw his\r\nconsent at any time.\r\n\r\nThis is closer to being about opt-outs, but it doesn't say that a globally-configured opt-out wins over a direct consent to a specific sharing request on a specific site. Without that statement, a controller can pretty easily prove that the data subject consented to their particular processing even if they told their browser to object in general. (\"We saw a `Sec-GPC: 1` header, and then we asked if they wanted to override that for our site, and they said yes, and they never clicked this other button on our site withdrawing that consent.\") At best, this winds up saying that if the user turns on GPC after some sites had gotten consent, those sites need to re-request consent. (Yay, more consent banners.)\r\n\r\nI did snip some other bits of both articles that seemed unrelated to GPC, but if I snipped a critical one incorrectly, please paste it in here.",
      "user": "jyasskin",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "administrative",
      "reason": "The comment provides feedback on the interpretation of specific provisions related to General Data Protection Control (GPC) requests. It specifically questions whether the controller bears the burden of proof for establishing consent under Article 24, and also suggests that sites may not need to re-request consent if they have previously obtained it through GPC."
    },
    {
      "id": 1985376479,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/68",
      "created_at": "2024-03-08T09:46:50Z",
      "updated_at": "2024-03-08T09:46:50Z",
      "body": "I'll rework it for the explainer instead. ",
      "user": "loganaden",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "use_case",
      "reason": "The comment appears to be suggesting an alternative approach or suggestion, implying that a different version of something exists or will exist (in this case, an explainer). This is characteristic of \"Use Case\" comments, which are meant for developers or other stakeholders to understand and plan for new features or improvements."
    },
    {
      "id": 1985417256,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/70",
      "created_at": "2024-03-08T10:12:22Z",
      "updated_at": "2024-03-08T10:12:22Z",
      "body": "I have a question also link to @AramZS [comment](https://github.com/privacycg/gpc-spec/pull/68#issuecomment-1984206085) in PR #68 : Is there no a risk of discrepancy about regional privacy regulations between the header from browser and a publisher with their CMP?",
      "user": "anderagakura",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "use_case",
      "reason": "The comment is asking for clarification or additional information regarding the potential discrepancies between how a browser handles its privacy headers (e.g., those that comply with GDPR) and how a publisher manages its Common Privacy Policy (CPP), which may have different regional regulations."
    },
    {
      "id": 1998069644,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/65",
      "created_at": "2024-03-14T18:23:57Z",
      "updated_at": "2024-03-14T18:23:57Z",
      "body": "> I suggest going further and moving the entire section to the explainer. As the original issue discussed, legal frameworks are a moving target and so will be easier to maintain separately, including for those current described in the spec.\r\n\r\nGood point, @chrisn. Since a number of people expressed this preference, that is what we are going to do, i.e., move the legal details to the [explainer](https://privacycg.github.io/gpc-spec/explainer), keep some general remarks in the spec itself, and (non-normatively) link to the explainer from the spec.\r\n\r\nI'll merge these changes now so that we have a clean slate to make these changes in the spec and explainer.",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment provides detailed suggestions for improving the specification, which is typically considered technical feedback. It proposes moving certain sections of the document to a new section called \"explainer\", suggesting improvements that can enhance the overall clarity and usability of the documentation."
    },
    {
      "id": 1998093357,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/70",
      "created_at": "2024-03-14T18:39:43Z",
      "updated_at": "2024-03-14T18:39:43Z",
      "body": "> I have a question also link to @AramZS [comment](https://github.com/privacycg/gpc-spec/pull/68#issuecomment-1984206085) in PR #68 : Is there no a risk of discrepancy about regional privacy regulations between the header from browser and a publisher with their CMP?\r\n\r\nMost CMPs implement GPC and set other privacy signals accordingly. For example, if GPC is turned on (via the header or JS property), the IAB's GPP `usca` is set accordingly by the CMP. I have not done exhaustive studies on this point, but in general it should be the case. Any particular CMP should be able to answer that question for their platform.",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment provides a technical insight or explanation regarding how Google Platform (GPC) and its Compliance Program with the Interactive Advertising Bureau (IAB) would handle regional privacy regulations between browser headers and publishers with Content Management Programs (CMPs). It offers suggestions for potential discrepancies and proposes that each CMP can be configured to determine this discrepancy."
    },
    {
      "id": 1998096875,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/68",
      "created_at": "2024-03-14T18:41:56Z",
      "updated_at": "2024-03-14T18:41:56Z",
      "body": "> I'll rework it for the explainer instead.\r\n\r\nGreat, @loganaden! Here is the [explainer](https://privacycg.github.io/gpc-spec/explainer) that we are currently revising and in which we can include your language.",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "The comment asks for a rework of an existing explainer, suggesting that the user is requesting changes to an existing document rather than providing feedback on its content."
    },
    {
      "id": 1998101741,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/70",
      "created_at": "2024-03-14T18:45:20Z",
      "updated_at": "2024-03-14T18:45:20Z",
      "body": "@SebastianZimmeck I understand the fact that the CMP should handle the signal but : \r\n\r\n1. You mention GPP spec\r\n2. What about TCF in UE which does not support GPC?",
      "user": "anderagakura",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment is providing technical feedback on how to improve the Capability Management Process (CMP), specifically highlighting a limitation or a potential issue with the current approach and suggesting an alternative solution that takes into account the specifics of the Control Technology Framework (CTF) in User Experience (UE)."
    },
    {
      "id": 2002575600,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/68",
      "created_at": "2024-03-17T18:46:49Z",
      "updated_at": "2024-03-17T18:46:49Z",
      "body": "@SebastianZimmeck I created a different PR: https://github.com/privacycg/gpc-spec/pull/71",
      "user": "loganaden",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "This comment is requesting that another pull request (PR) be addressed, specifically asking the author to create a new PR and provide a link to it. This suggests that the commenter wants to see a feature or improvement in the codebase being developed."
    },
    {
      "id": 2008360306,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/72",
      "created_at": "2024-03-19T23:53:24Z",
      "updated_at": "2024-03-19T23:53:24Z",
      "body": "@HeinzBaumann, here is the [current timeline](https://www.w3.org/2023/12/proposed-wg-privacy.html) (section 3.4). Though, we are a bit delayed. ",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides constructive feedback regarding the proposed W3C working group document, specifically addressing a point in section 3.4 of the current timeline."
    },
    {
      "id": 2009501263,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/70",
      "created_at": "2024-03-20T12:53:40Z",
      "updated_at": "2024-03-20T12:53:40Z",
      "body": "> You mention GPP spec\r\n\r\nYes, for example, [GPC is included in GPP for California](https://github.com/InteractiveAdvertisingBureau/Global-Privacy-Platform/blob/main/Sections/US-States/CA/GPP%20Extension%3A%20IAB%20Privacy%E2%80%99s%20California%20Privacy%20Technical%20Specification.md#gpc-sub-section).\r\n\r\n> What about TCF in UE which does not support GPC?\r\n\r\nOnce it is clear to which extent GPC is applicable in the EU, I imagine a similar solution for TCF as for GPP.",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides feedback on how Google Play Privacy Policy (GPP) relates to California General Data Protection Regulation (GDPR), suggesting that TCF (Transparency and Choice Framework) in the EU is similar to GPP in terms of its technical specifications, implying a request for a similar solution."
    },
    {
      "id": 2009928253,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/72",
      "created_at": "2024-03-20T16:00:42Z",
      "updated_at": "2024-03-20T16:00:42Z",
      "body": "@SebastianZimmeck Thank you for the link. Quick question: what does this actually mean? \"February 2025: Global Privacy Control, Candidate Recommendation\". Is this the data is goes into the w3 specification? ",
      "user": "HeinzBaumann",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment provides feedback on the technical details of a new feature or functionality (Global Privacy Control and Candidate Recommendation) in relation to its implementation (going into the W3 specification)."
    },
    {
      "id": 2010706662,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/51",
      "created_at": "2024-03-20T21:53:18Z",
      "updated_at": "2024-03-20T21:53:18Z",
      "body": "I believe there's potential in broadening the current single-bit encoding to a more comprehensive 6-bit system. This enhancement would accommodate the varying privacy laws across different regions, such as the United States, Europe, and beyond. In Europe, for instance, a single bit doesn't suffice due to the requirement for more detailed consent, exemplified by the 11 purposes outlined in the TCF (Transparency and Consent Framework). By incorporating such granularity into the header encoding, browsers could assume the role of gatekeepers, thereby obviating the need for numerous intrusive consent managers.\r\n\r\nWhile I acknowledge that the implementation may be more intricate than this simplified explanation, I believe it aligns with the broader goal of designing the GPC (Global Privacy Control) signal with scalability in mind. This direction holds promise for facilitating smoother compliance with evolving privacy regulations.",
      "user": "HeinzBaumann",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment provides technical insights and suggestions regarding an enhancement to a specific component, which is classified as a technical feedback. This type of input is typically provided by experts or developers working on the project, offering constructive criticism and recommendations for improvement."
    },
    {
      "id": 2010886606,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/72",
      "created_at": "2024-03-20T23:17:29Z",
      "updated_at": "2024-03-20T23:17:29Z",
      "body": "The [Candidate Recommendation](https://www.w3.org/2023/Process-20231103/#RecsCR) is just one particular step in the process.",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides specific feedback on a technical recommendation, suggesting it might be helpful but not necessarily crucial or impactful enough to warrant full consideration."
    },
    {
      "id": 2015217452,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/72",
      "created_at": "2024-03-22T14:23:32Z",
      "updated_at": "2024-03-22T14:23:32Z",
      "body": "@HeinzBaumann, if you have further questions, please feel free to reopen. ",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "administrative",
      "reason": "This comment is from an administrator of a Stack Overflow-like platform, and its purpose appears to be notifying the commenter that they can reopen their question if they need additional information or clarification. The tone is polite and directive, with no explicit technical feedback, use case, feature request, or philosophical content."
    },
    {
      "id": 2015224314,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/69",
      "created_at": "2024-03-22T14:27:25Z",
      "updated_at": "2024-03-22T14:27:25Z",
      "body": "As we decided to generally transfer the discussion of laws to the Explainer, this issue is no longer relevant.",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides constructive feedback on a decision made in an administrative or internal context. It's meant to inform the author about what needs to be done next and clarifies their role within the process. The tone is neutral and instructional, indicating that it doesn't have a personal opinion or emotional attachment to the issue itself."
    },
    {
      "id": 2015232146,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/68",
      "created_at": "2024-03-22T14:31:44Z",
      "updated_at": "2024-03-22T14:31:44Z",
      "body": "I am closing this PR as it is superseded by #71.\r\n\r\n@jyasskin, if you like to continue discussing [your point above](https://github.com/privacycg/gpc-spec/pull/68#issuecomment-1985073388), please feel free to open a new issue or comment on an existing issue if you think your point fits there.",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "administrative",
      "reason": "No reason provided."
    },
    {
      "id": 2015317672,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/71",
      "created_at": "2024-03-22T15:13:30Z",
      "updated_at": "2024-03-22T15:13:30Z",
      "body": "> Thank you, @loganaden!\r\n> \r\n> > As GPC is intended to convey a generate request that data controllers limit the sale or sharing of the person's personal data to other data controllers, ...\r\n> \r\n> Do you mean \"general request\"? Otherwise, what do you mean by \"generate\"?\r\n> \r\nMy bad. Fixing this.\r\n> > Mauritian regulators may deem GPC to constitute a legally binding invocation of Article 24 rights. However, there might be ambiguities as there is no explicit mention of global opt-out mechanism winning over a direct consent to a specific sharing request on a specific site.\r\n> \r\n> Is it possible to make this statement a bit more specific as to which cases GPC applies to and for which there is ambiguity? For example, would the following be an accurate description:\r\n> \r\n> > Mauritian regulators may deem GPC to constitute a legally binding invocation of Article 24 rights. That would be the case if people's GPC opt out preferences are their only known opt out preferences or their GPC opt out preferences are in line with any other opt out preferences they invoked. However, in case of conflicts there might be ambiguities as there is no explicit mention of global opt-out mechanism winning over a direct consent to a specific sharing request on a specific site.\r\n> \r\nAgreed.\r\n> We are trying to make this as actionable as possible. Feel free to write as you see fit (if it can be made more precise).\r\n\r\n",
      "user": "loganaden",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "The comment is asking for clarification and improvement in how the General Data Protection Controller (GPC) is applied, particularly regarding its applicability to specific cases, opt-out mechanisms, and ambiguity. It seeks a more detailed explanation of when GPC might be deemed binding and under what conditions it would apply."
    },
    {
      "id": 2050239247,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/64",
      "created_at": "2024-04-11T18:08:56Z",
      "updated_at": "2024-04-11T18:08:56Z",
      "body": "@ryan-a-guthrie, is this OK with you? If so, we we will close this issue. This resolves it for me.",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "The comment expresses a request from someone to add the issue, and the author agrees that it can be closed by the reviewer, indicating that it is seeking some form of acknowledgment or action from others in order to move forward."
    },
    {
      "id": 2050345537,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/63",
      "created_at": "2024-04-11T19:12:04Z",
      "updated_at": "2024-04-11T19:12:04Z",
      "body": "Maggie Oates is also working on this.",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "use_case",
      "reason": "This comment appears to be an update about someone's involvement in a project, specifically mentioning that another person, Maggie Oates, is also working on the same project. The comment is informal and descriptive, and it does not contain any technical or philosophical information. It primarily serves as a notification or confirmation that both parties are aware of each other's work, which could be relevant to a use case analysis in software development or research settings."
    },
    {
      "id": 2064922732,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/74",
      "created_at": "2024-04-18T18:48:04Z",
      "updated_at": "2024-04-18T18:48:04Z",
      "body": "We can address this issue as part of #73.",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides specific information about an issue (the ability to address it through #73) and asks for input or clarification. It does not provide any context, propose a solution, or request assistance outside of addressing the specific issue being discussed in the given number."
    },
    {
      "id": 2067092891,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/74",
      "created_at": "2024-04-19T18:31:36Z",
      "updated_at": "2024-04-19T18:31:36Z",
      "body": "That works for me!",
      "user": "hober",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "philosophical",
      "reason": "This comment expresses satisfaction and approval of an action (the code or functionality working as intended), but it does not provide any specific information that would require further analysis or discussion."
    },
    {
      "id": 2067110329,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/73",
      "created_at": "2024-04-19T18:45:11Z",
      "updated_at": "2024-04-19T18:45:11Z",
      "body": "Per @hober in #74:\r\n\r\n> \u00a75 should end after the sentence \"For additional details on legal effects, consult the explainer.\"",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment provides constructive criticism or improvement suggestions to the code, specifically regarding the organization of a section of text. It does not relate to a use case, feature request, administrative task, conclusion/resolution, or philosophical discussion."
    },
    {
      "id": 2104763867,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/51",
      "created_at": "2024-05-10T15:00:02Z",
      "updated_at": "2024-05-10T15:00:02Z",
      "body": "A complication has come up in the draft text of the APRA that is not elaborated on here. A single privacy law would have two different global opt outs that could (and maybe should) function independently. This is more support that we should expand the definition to >1 bit.",
      "user": "bvandersloot-mozilla",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "The comment expresses a suggestion for an expansion of the current definition of \"opt-in\" or \"opt-out\", specifically mentioning a need for two distinct global opt-outs, which aligns with the concept of a feature request."
    },
    {
      "id": 2115215207,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/73",
      "created_at": "2024-05-16T13:13:31Z",
      "updated_at": "2024-05-16T13:13:31Z",
      "body": "One point to elaborate on in the explainer is the default situation under various laws (e.g., that selecting a privacy-preserving browser, such as Brave or Firefox, qualifies as an active and deliberate choice and not as a default choice).\r\n\r\n(cc'ing @pes10k) ",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment provides feedback on the explainer, specifically pointing out that the context in which privacy-preserving browsers are used is different from how they are considered defaults, and it suggests clarifying this point for clarity."
    },
    {
      "id": 2134998481,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/76",
      "created_at": "2024-05-28T11:35:48Z",
      "updated_at": "2024-05-28T11:35:48Z",
      "body": "What is this? And why are you randomly approving PRs in my repo?",
      "user": "ReenigneArcher",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "administrative",
      "reason": "This comment appears to be an administrative message intended to provide information or clarification on the approval process for pull requests (PRs) in a repository. It does not request anything nor provides feedback, but rather serves as a notification about how PRs are being handled."
    },
    {
      "id": 2391757597,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/73",
      "created_at": "2024-10-03T15:48:06Z",
      "updated_at": "2024-10-03T15:48:06Z",
      "body": "I created PR #81 to try to address this.",
      "user": "j-br0",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "The comment is asking for feedback on a technical issue (a specific change) related to the code or software, indicating that it's meant to provide constructive criticism."
    },
    {
      "id": 2417987750,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/80",
      "created_at": "2024-10-16T21:20:59Z",
      "updated_at": "2024-10-16T21:20:59Z",
      "body": "When site-specific arrangements override universal GPC signals will be a question of law. Both California and Colorado, for example, have requirements for when consent to override a previous opt-out is deemed to be valid.\r\n\r\nI have no objection noting in the spec and/or the explainer that it is possible that specific consent may override a GPC signal, but I would want to also point to the fact that jurisdictions that have rules for when GPC is valid may also have rules for when GPC may be disregarded (which is probably best done in the explainer).",
      "user": "j-br0",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides detailed feedback about a technical aspect of the system, specifically how site-specific arrangements can override universal GPC signals. It suggests that there are potential inconsistencies and complexities related to this issue that may need to be addressed in the specification or explainer."
    },
    {
      "id": 2450536015,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/6",
      "created_at": "2024-10-31T18:14:16Z",
      "updated_at": "2024-10-31T18:14:16Z",
      "body": "Given widespread GPC deployment and no further discussion here we will move forward for now without a structured header.",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides constructive feedback about the current state of a project or system, specifically regarding the use of Global Priority Control (GPC) in its deployment. It suggests an improvement by mentioning that there should be a \"structured header\"."
    },
    {
      "id": 2454156518,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/6",
      "created_at": "2024-11-04T09:06:38Z",
      "updated_at": "2024-11-04T09:06:38Z",
      "body": "What constitutes widespread deployment? How many browser engines are shipping an implementation? Just because there has been no further discussion doesn't invalidate the concerns raised.",
      "user": "annevk",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "This comment is expressing dissatisfaction about certain concerns raised previously, implying that some issues were not fully addressed or discussed. The commenter does not provide new information but rather reiterates their objections to a feature or deployment decision. This suggests that the issue is more of a philosophical one (e.g., whether the approach should be maintained) than an administrative or technical issue that needs to be resolved immediately, and hence it could also be classified as a Feature Request."
    },
    {
      "id": 2454644542,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/6",
      "created_at": "2024-11-04T12:54:46Z",
      "updated_at": "2024-11-04T12:54:46Z",
      "body": "This has been deployed as it is now for several years and is acted upon by [many sites](https://well-known.dev/?q=resource%3Agpc+gpc_support%3Atrue+is_base_domain%3Atrue#results) (and this is just those that use the .well-known resource, which it optional). Changing the header now would break most of that content (I know for a fact that it would break nytimes.com for instance) in a way that would turn those sites from complying with the law to breaking the law.",
      "user": "darobin",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "feature_request",
      "reason": "The comment is asking for the feature to be changed, which is typically classified as a request or suggestion for improvement. This type of feedback is often necessary to identify and address issues that may cause problems in the future."
    },
    {
      "id": 2462901507,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/35",
      "created_at": "2024-11-07T18:03:26Z",
      "updated_at": "2024-11-07T18:03:26Z",
      "body": "My view is that the GPC is web spec. We're defining what the control signal should do at a minimum. It's independent of any laws but we should use those as an informative source for us setting what we believe should be the minimums.",
      "user": "rinchen",
      "is_owner": false,
      "is_contributor": false,
      "repository_id": "w3c/GPC",
      "classification": "use_case",
      "reason": "The comment discusses a specific technical aspect (the GPC) and its relationship to other standards or regulations (laws), indicating that it is related to the definition of the use case for this standard. The comment also expresses an opinion on how the control signal should be set, suggesting that it may influence the implementation or behavior of the standard."
    },
    {
      "id": 2491875644,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/82",
      "created_at": "2024-11-21T17:40:23Z",
      "updated_at": "2024-11-21T17:40:23Z",
      "body": "Discussed adding language around these lines to the introduction in our most recent meeting. It was suggested we may want to reference https://w3ctag.github.io/privacy-principles/ ",
      "user": "AramZS",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment is providing technical advice and suggestions for improvement, which falls under the category of Technical Feedback."
    },
    {
      "id": 2491879754,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/83",
      "created_at": "2024-11-21T17:42:29Z",
      "updated_at": "2024-11-21T17:42:29Z",
      "body": "Sounds like there may be agreement here on clarifying the terminology, and also that removing a lot of the legal implications language might decrease the potential conflicts here. Justin to propose a small change as needed.",
      "user": "npdoty",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "use_case",
      "reason": "The comment is a suggestion or proposal from Justin for making a change in the conversation based on the tone (agreement) and context. It's a recommendation rather than providing technical feedback, suggesting it fits into the \"Use Case\" category."
    },
    {
      "id": 2491881418,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/83",
      "created_at": "2024-11-21T17:43:16Z",
      "updated_at": "2024-11-21T17:43:16Z",
      "body": "In the PATWG's charter we talk about \r\n\r\n> Ways in which new features might enable inappropriate processing include (but are not limited to) enabling of [cross-site or cross context recognition ](https://www.w3.org/TR/privacy-principles/#dfn-cross-site-recognition)of users or enabling [same-site or same-context recognition ](https://www.w3.org/TR/privacy-principles/#dfn-same-site-recognition)of users across the clearing of state.\r\n\r\nis that maybe the type of language we want to specify here with the same supporting language?",
      "user": "AramZS",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment provides feedback on the language and terminology used in a technical document, specifically suggesting alternative phrases or words to improve clarity and consistency."
    },
    {
      "id": 2491900962,
      "issue_url": "https://api.github.com/repos/w3c/gpc/issues/84",
      "created_at": "2024-11-21T17:52:37Z",
      "updated_at": "2024-11-21T17:52:37Z",
      "body": "I will take a shot at this based on the [Self-Review Questionnaire: Security and Privacy](https://w3ctag.github.io/security-questionnaire/).",
      "user": "SebastianZimmeck",
      "is_owner": false,
      "is_contributor": true,
      "repository_id": "w3c/GPC",
      "classification": "technical_feedback",
      "reason": "This comment appears to be providing constructive feedback or suggestions related to security and privacy, which falls under the category of technical feedback."
    }
  ]